{"version":3,"sources":["helpers/common.js","components/navbar.js","components/loading.js","helpers/validation.js","components/pages/login.js","components/pages/sign-up.js","components/pages/my-tournaments.js","components/tab-panel.js","components/fixtures-dir/fixtures.js","components/fixtures.js","components/league-table.js","components/pages/create-new.js","components/admin-dir/admin-actions.js","components/admin-dir/team-search.js","components/admin-dir/update-teams.js","components/admin-dir/update-results.js","components/admin.js","components/pages/tournament.js","components/pages/search.js","app.js","other/reportWebVitals.js","index.js"],"names":["fetchApi","url","method","values","a","Promise","resolve","reject","fetch","toUpperCase","credentials","headers","Accept","body","undefined","JSON","stringify","response","status","json","apiResponse","success","err","result","message","basicFetch","loadingFunction","reloadOnSuccess","alertOnFailure","onSuccess","onFailure","setTimeout","window","location","reload","alert","useStyles","makeStyles","theme","root","flexGrow","appBar","flexDirection","menu","borderRadius","menuButton","marginRight","spacing","title","fontWeight","color","links","textAlign","menuIcon","fontSize","marginLeft","menuIconFab","display","justifyContent","alignItems","width","height","linkText","loginText","textDecoration","logoutText","navLinkText","margin","padding","backgroundColor","fab","position","bottom","right","opacity","transition","zIndex","NavBar","props","user","styles","React","useState","anchorEl","setAnchorEl","handleClick","event","currentTarget","handleClose","handleLogout","showFabButton","setShowFabButton","useEffect","addFabButton","scrollY","document","addEventListener","removeEventListener","AppBar","className","Toolbar","Button","to","pathname","state","prevPage","href","aria-controls","aria-haspopup","onClick","id","keepMounted","open","Boolean","onClose","Fab","modal","loadingContainer","outline","WaitForServer","wait","Modal","aria-labelledby","aria-describedby","disableBackdropClick","CircularProgress","size","thickness","SignUpSchema","Yup","shape","username","min","max","required","matches","lowercase","email","password","LoginSchema","SearchSchema","searchString","Login","FormBody","page","isCreating","showUsername","apiUrl","validationSchema","paper","marginTop","avatar","palette","secondary","main","form","submit","error","setWaitForServer","serverError","setServerError","useLocation","initialValues","formik","useFormik","onSubmit","Container","component","maxWidth","CssBaseline","Avatar","Typography","variant","handleSubmit","Grid","container","item","xs","TextField","fullWidth","label","name","autoComplete","onChange","handleChange","onBlur","handleBlur","value","touched","errors","type","justify","SignUp","paddingTop","paddingBottom","focusVisible","pageHeader","whiteSpace","heading","typography","pxToRem","fontWeightRegular","signedOutMessage","accDetails","flexWrap","addButton","marginBottom","emptyList","MyTournaments","recentTournaments","setRecent","adminTournaments","setAdminTournaments","favorites","setFavorites","then","admin","catch","e","console","log","recent","localStorage","getItem","parse","Fragment","Paper","elevation","align","Accordion","defaultExpanded","AccordionSummary","expandIcon","AccordionDetails","length","map","tournament","TournamentItem","isKnockout","createdBy","tournamentId","_id","useTournamentStyles","tournamentBox","minWidth","linkButton","fontWeightBold","tournamentInfo","paddingLeft","fontStyle","Box","paragraph","TabPanel","children","index","other","role","hidden","useResults","resultsContainer","paddingRight","resultSet","resultBox","minHeight","tieBreaker","tieBreakerText","goals","fontFamily","team","alignSelf","wordBreak","homeTeam","awayTeam","advanced","resultInput","closed","teamBadge","handleInputResults","updateFunc","target","style","isNaN","parseInt","parseFloat","prevState","getScoreString","score","addResult","goalsFor","goalsAgainst","results","push","addTieBreaker","homeResultArray","isInvalidScore","inputName","opposingInputId","getElementById","opposingInput","KnockoutTeamResults","roundFixtures","teams","useTwoLegs","isUpdatingResults","isCurrentRound","isFinal","useOneFinal","loading","setLoading","setTeamNames","fixture","firstTeam","secondTeam","automaticWinner","firstTeamLogo","secondTeamLogo","isEmpty","opponentIndex","teamIndex","teamName","teamLogo","updatedResults","setUpdatedResults","handleResults","setInitialValues","numberOfTeamsLeft","i","homeFor","homeAgainst","tieBreakerFor","tieBreakerAgainst","neutralFor","neutralAgainst","disabled","home","awayFor","away","awayAgainst","Result","homeLogo","awayLogo","homeAutoAdvance","goalsForComp","ResultInput","defaultValue","onMount","goalsAgainstComp","isTieBreaker","awayAutoAdvance","neutral","LeagueTeamResults","teamFixtures","numberOfTeams","isSameTeam","homeGoalsFor","toString","homeGoalsAgainst","awayGoalsFor","awayGoalsAgainst","neutralGoalsFor","neutralGoalsAgainst","inputProps","placeholder","alt","src","tabPanelContainer","appBarContainer","roundLabels","roundOf32","roundOf16","roundOf8","roundOf4","roundOf2","KnockoutFixtures","fixtures","startingRound","currentRound","setValue","availableRounds","setAvailableRounds","startingNumber","slice","currentNumber","roundsArray","Tabs","newValue","indicatorColor","textColor","scrollButtons","aria-label","round","Tab","LeagueFixtures","StyledTableCell","withStyles","head","common","white","border","TableCell","table","StyledTableRow","action","hover","TableRow","CustomizedTables","rows","tableData","teamDetails","played","won","drawn","lost","goalDifference","points","TableContainer","Table","stickyHeader","TableHead","colHead","TableBody","row","LeagueTable","typeLabel","tournamentType","nameField","checkbox","checkboxLabel","moreInfo","CreateNew","TournamentForm","useRealTeams","useAwayGoals","hasLeagueFixturesGenerated","allDisabled","tournamentProps","setTournamentProps","handleRadioChange","prop","checked","history","useHistory","allProps","Object","assign","InputProps","FormControl","RadioGroup","FormControlLabel","control","Radio","CheckBoxField","moreInfoComponent","Checkbox","useAdminActionsStyle","actionSet","resetContainer","flex","confirmActionInput","actionButtonLabel","AdminActions","setAdminPage","isResettingFixtures","setResettingFixtures","isResettingRound","setResettingRound","isDeleting","setDeleting","handleAdminNavigation","newPage","ActionSet","primaryButtonText","onClickPrimary","useSecondary","isComplete","secondaryButtonText","onClickSecondary","includes","inputId","inputLabel","searchContainer","maxHeight","overflow","cancelContainer","cancelButton","resultButton","TeamSearch","useActivity","logoInputName","handleSelectedTeam","isLoading","setResults","finally","onBackdropClick","IconButton","strTeam","strTeamBadge","useUpdateStyles","teamSetContainer","input","allInput","nameFieldsContainer","teamNameForm","UpdateTeams","tournamentTeams","setNumberOfTeams","disableNumberChange","setDisableChange","fixturesGenerated","defaultValues","forEach","playerName","setValues","handleValueChange","Input","Number","step","Slider","confirm","Array","fill","TeamPlayerName","disableTeamNames","preventDefault","teamNames","teamLogos","playerNames","teamNameInput","teamLogoInput","playerNameInput","isSearching","setSearching","handleOpenSearch","teamLogoEvent","sm","endAdornment","InputAdornment","noFixtures","UpdateResults","leagueFixtures","Admin","indicator","background","tabItem","teamContainer","favoriteText","Tournament","setLoadingStatus","notSet","setTournament","isTournamentAFavorite","setFavorite","isLeague","setLeague","setTeams","fixturesDocument","setFixturesDoc","setTableData","path","split","startingPage","currentPage","setCurrentPage","getTournamentAndFixtures","useCallback","notFound","tournamentObj","filter","pop","unshift","setItem","baseUrl","classes","icon","Team","useTeamsStyle","teamBox","teamButton","boxSizing","owner","panelContainer","Search","searchResults","setSearchResults","explore","setExploreTournaments","centered","noResults","TournamentIdHandler","useParams","App","setUser","isUserCheckDone","setUserCheckDone","waiting","getUserDetails","appStyle","app","belowNavBarContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.f652e595.chunk.js","sourcesContent":["export async function fetchApi (url, method, values) {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            // const prod = \"https://material-tournaments.herokuapp.com/api/\";\r\n            const dev = \"/api/\";\r\n            // const apiUrl = process.env.NODE_ENV === 'production' ? prod : dev;\r\n            const response = await fetch(\r\n                `${dev}${url}`,\r\n                {\r\n                    method: method.toUpperCase(),\r\n                    credentials: 'include',\r\n                    headers: {\r\n                        Accept: 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: method === 'get' ? undefined : JSON.stringify(values)\r\n                });\r\n            if (response.status === 500) return reject('Server Unavailable');\r\n            const apiResponse = await response.json();\r\n            if (!apiResponse.success) {\r\n                if (apiResponse.err === 'no-user') return reject('no-user');\r\n                reject(apiResponse.err);\r\n            }\r\n            resolve(apiResponse.result);\r\n        } catch (err) {\r\n            if (err.message === 'Failed to fetch') return reject(\"You're offline\");\r\n            reject(err);\r\n        }\r\n    })\r\n}\r\nexport function basicFetch (url, method, values, loadingFunction, reloadOnSuccess, alertOnFailure, onSuccess, onFailure) {\r\n    loadingFunction(true);\r\n    setTimeout(async () => {\r\n        try {\r\n            await fetchApi(url, method, values);\r\n            if (reloadOnSuccess) {\r\n                window.location.reload();\r\n            }\r\n            if (onSuccess) {\r\n                onSuccess();\r\n            }\r\n        } catch (e) {\r\n            if (onFailure) {\r\n                onFailure();\r\n            }\r\n            if (alertOnFailure) {\r\n                alert(e);\r\n            }\r\n        } finally {\r\n            loadingFunction(false);\r\n        }\r\n    }, 1000)\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport '../stylesheets/default-font.css';\r\nimport {Link, NavLink} from 'react-router-dom';\r\nimport {fetchApi} from \"../helpers/common\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        flexDirection: \"row-reverse\"\r\n    },\r\n    menu: {\r\n        borderRadius: 30\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        fontWeight: 'bolder',\r\n        color: \"whitesmoke\"\r\n    },\r\n    links: {\r\n        fontWeight: 'bold',\r\n        textAlign: \"center\"\r\n    },\r\n    menuIcon: {\r\n        color: 'whitesmoke',\r\n        fontSize: 30,\r\n        marginLeft: 50\r\n    },\r\n    menuIconFab: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: 56,\r\n        height: 56,\r\n        '& svg': {\r\n            width: 35,\r\n            height: 35\r\n        }\r\n    },\r\n    linkText: {\r\n        width: 70,\r\n        textAlign: \"left\",\r\n        // fontSize: 22\r\n    },\r\n    loginText: {\r\n        color: 'whitesmoke',\r\n        textDecoration: 'none',\r\n        fontSize: 18\r\n    },\r\n    logoutText: {\r\n        color: \"indianred\",\r\n    },\r\n    navLinkText: {\r\n        display: \"block\",\r\n        margin: 10,\r\n        padding: \"10px 25px\",\r\n        fontSize: 18,\r\n        color: \"darkslategray\",\r\n        textAlign: \"left\",\r\n        textDecoration: \"none\",\r\n        backgroundColor: \"whitesmoke\",\r\n    },\r\n    fab: {\r\n        position: \"fixed\",\r\n        bottom: theme.spacing(8),\r\n        right: theme.spacing(2),\r\n        opacity: 0.7,\r\n        transition: \"opacity 200ms linear\",\r\n        '&:hover, &:focus': {\r\n            opacity: 1\r\n        },\r\n        zIndex: 999\r\n    }\r\n}));\r\n\r\nexport default function NavBar (props) {\r\n    const {user} = props;\r\n    const styles = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    // const location = useLocation();\r\n    // const path = location.pathname.split('/');\r\n    // const page = path[1];\r\n    // const startingPage =\r\n    //     page === 'tournament' ? ''\r\n    //         : ['new', 'search', 'home'].includes(page) ? page\r\n    //         : 'home';\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleLogout = async () => {\r\n        try {\r\n            await fetchApi('users/logout', 'post');\r\n            window.location.reload();\r\n        } catch (err) {\r\n            alert(err)\r\n        }\r\n    }\r\n    const [showFabButton, setShowFabButton] = useState(false);\r\n    useEffect(() => {\r\n        const addFabButton = function() {\r\n            setShowFabButton(window.scrollY > 46);\r\n        }\r\n        document.addEventListener('scroll', addFabButton);\r\n        return () => document.removeEventListener('scroll', addFabButton)\r\n    }, []);\r\n    return (\r\n        <>\r\n            <AppBar position=\"static\"\r\n                    className={styles.appBar}>\r\n                <Toolbar>\r\n                    {/*<Typography variant=\"h6\" className={styles.title}>*/}\r\n                    {/*    {startingPage && startingPage.toUpperCase()}*/}\r\n                    {/*</Typography>*/}\r\n                    {\r\n                        !user &&\r\n                        <>\r\n                            <Button color=\"inherit\" className={styles.links}>\r\n                                <NavLink to={{pathname: \"/login\", state: {prevPage: window.location.href}}}\r\n                                         className={styles.loginText}>Login</NavLink>\r\n                            </Button>\r\n                            <Button color=\"inherit\" className={styles.links}>\r\n                                <NavLink to={{pathname: \"/signup\", state: {prevPage: window.location.href}}}\r\n                                         className={styles.loginText}>Sign-up</NavLink>\r\n                            </Button>\r\n                        </>\r\n                    }\r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                        <MenuIcon className={styles.menuIcon} />\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <Link to=\"/\" onClick={handleClose} className={styles.navLinkText}>\r\n                            <span className={styles.linkText}>Home</span>\r\n                        </Link>\r\n                        <Link to=\"/search\" onClick={handleClose} className={styles.navLinkText}>\r\n                            <span className={styles.linkText}>Search</span>\r\n                        </Link>\r\n                        <Link to=\"/new\" onClick={handleClose} className={styles.navLinkText}>\r\n                            <span className={styles.linkText}>New</span>\r\n                        </Link>\r\n                        {\r\n                            user &&\r\n                            <Link onClick={handleLogout} to=\"#\" className={styles.navLinkText}>\r\n                                <span className={`${styles.linkText} ${styles.logoutText}`}>Logout</span>\r\n                            </Link>\r\n                        }\r\n                    </Menu>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {\r\n                showFabButton &&\r\n                <Fab color=\"primary\" className={styles.fab}>\r\n                <span className={styles.menuIconFab} onClick={handleClick}>\r\n                    <MenuIcon />\r\n                </span>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <Link to=\"/\" onClick={handleClose} className={styles.navLinkText}>\r\n                            <span className={styles.linkText}>Home</span>\r\n                        </Link>\r\n                        <Link to=\"/search\" onClick={handleClose} className={styles.navLinkText}>\r\n                            <span className={styles.linkText}>Search</span>\r\n                        </Link>\r\n                        <Link to=\"/new\" onClick={handleClose} className={styles.navLinkText}>\r\n                            <span className={styles.linkText}>New</span>\r\n                        </Link>\r\n                        {\r\n                            user &&\r\n                            <Link onClick={handleLogout} to=\"#\" className={styles.navLinkText}>\r\n                                <span className={`${styles.linkText} ${styles.logoutText}`}>Logout</span>\r\n                            </Link>\r\n                        }\r\n                    </Menu>\r\n                </Fab>\r\n            }\r\n\r\n        </>\r\n    )\r\n}","import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n// import style from '../stylesheets/components/loading.module.scss';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    loadingContainer: {\r\n        outline: \"none\"\r\n    },\r\n}));\r\nexport default function WaitForServer (props) {\r\n    const {wait} = props;\r\n    const styles = useStyles();\r\n    return (\r\n        <Modal\r\n            open={wait}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            disableBackdropClick={true}\r\n            className={styles.modal}\r\n        >\r\n            <CircularProgress size={100} thickness={4} className={styles.loadingContainer}/>\r\n        </Modal>\r\n    )\r\n}","import * as Yup from 'yup';\r\n\r\n// Signup - username, email, password\r\n// Login - username, password\r\n// Search - toWatch Notes\r\n\r\nexport const SignUpSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n        .min(3, 'Too Short - Min 6 characters')\r\n        .max(20, 'Too Long - Max 20 characters')\r\n        .required('Required')\r\n        .matches(/^[a-z0-9]+$/i, 'Must be Alphanumeric')\r\n        .lowercase(),\r\n    email: Yup.string()\r\n        .email('Invalid email')\r\n        .required('Required'),\r\n    password: Yup.string()\r\n        .min(6, 'Too Short - Min 6 characters')\r\n        .max(128, 'Too Long - Max 128 characters')\r\n        .required('Required')\r\n});\r\nexport const LoginSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email('Invalid email')\r\n        .required('Required')\r\n});\r\n\r\nexport const SearchSchema = Yup.object().shape({\r\n    searchString: Yup.string()\r\n        .min(2, 'Search with at least 2 characters')\r\n        .required('Required')\r\n});\r\n","import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useFormik} from \"formik\";\r\nimport WaitForServer from \"../loading\";\r\nimport {fetchApi} from \"../../helpers/common\";\r\nimport {Link as RouterLink, useLocation} from 'react-router-dom';\r\nimport {LoginSchema} from \"../../helpers/validation\";\r\n\r\nexport default function Login() {\r\n    return (\r\n        <FormBody\r\n            page=\"Log in\"\r\n            isCreating={false}\r\n            showUsername={false}\r\n            apiUrl=\"login\"\r\n            validationSchema={LoginSchema}\r\n        />\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    error: {\r\n        color: 'red',\r\n        fontSize: '1.2em',\r\n        margin: \"auto\",\r\n        textAlign: \"center\"\r\n    }\r\n}));\r\n\r\nexport function FormBody (props) {\r\n    const styles = useStyles();\r\n    const {showUsername, page, isCreating, apiUrl, validationSchema} = props;\r\n    const [wait, setWaitForServer] = useState(false);\r\n    const [serverError, setServerError] = useState(\"\");\r\n    const location = useLocation();\r\n    const prevPage = location.state ? location.state.prevPage : \"\";\r\n    const initialValues = {\r\n        username: showUsername? '' : undefined,\r\n        email: '',\r\n        password: ''\r\n    }\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema,\r\n        onSubmit: values => {\r\n            setWaitForServer(true);\r\n            setServerError(\"\");\r\n            setTimeout(async ()=>{\r\n                try {\r\n                    await fetchApi( `users/${apiUrl}`, 'post', values);\r\n                    if (prevPage) {\r\n                        window.location.href = prevPage\r\n                    } else {\r\n                        window.location.reload();\r\n                    }\r\n                } catch (err) {\r\n                    setServerError(err);\r\n                } finally {\r\n                    setWaitForServer(false);\r\n                }\r\n            }, 1500);\r\n        }\r\n    });\r\n    return (\r\n        <>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <WaitForServer wait={wait} />\r\n                <CssBaseline />\r\n                <div className={styles.paper}>\r\n                    <Avatar className={styles.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        {page}\r\n                    </Typography>\r\n                    <form className={styles.form} onSubmit={formik.handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            {   showUsername &&\r\n                                <>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"username\"\r\n                                            label=\"Username\"\r\n                                            name=\"username\"\r\n                                            autoComplete=\"username\"\r\n                                            onChange={formik.handleChange}\r\n                                            onBlur={formik.handleBlur}\r\n                                            value={formik.values.username}\r\n                                    />\r\n                                    </Grid>\r\n                                    <Grid item className={styles.error}>\r\n                                        {formik.touched.username && formik.errors.username}\r\n                                    </Grid>\r\n                                </>\r\n\r\n                            }\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.email}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item className={styles.error}>\r\n                                {formik.touched.email && formik.errors.email}\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    value={formik.values.password}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item className={styles.error}>\r\n                                {formik.touched.password && formik.errors.password}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item className={styles.error}>\r\n                            {serverError}\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={styles.submit}\r\n                        >\r\n                            {page}\r\n                        </Button>\r\n                        <Grid container justify=\"flex-end\">\r\n                            {\r\n                                isCreating ?\r\n                                    <Grid item>\r\n                                        <RouterLink to={{pathname: \"/login\", state: {prevPage: window.location.href}}}>\r\n                                            Already have an account? Log in\r\n                                        </RouterLink>\r\n                                    </Grid> :\r\n                                    <Grid item>\r\n                                        <RouterLink to={{pathname: \"/signup\", state: {prevPage: window.location.href}}}>\r\n                                            Don't have an account? Sign Up\r\n                                        </RouterLink>\r\n                                    </Grid>\r\n                            }\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import {FormBody} from \"./login\";\r\nimport {SignUpSchema} from \"../../helpers/validation\";\r\n\r\n\r\nexport default function SignUp() {\r\n    return (\r\n        <FormBody\r\n            page=\"Sign Up\"\r\n            isCreating={true}\r\n            showUsername={true}\r\n            apiUrl=\"signup\"\r\n            validationSchema={SignUpSchema}\r\n        />\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {Link} from 'react-router-dom';\r\nimport {fetchApi} from \"../../helpers/common\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n    },\r\n    focusVisible: {\r\n      backgroundColor: \"cadetblue\"\r\n    },\r\n    pageHeader: {\r\n        color: \"darkslategray\",\r\n        fontWeight: 'bolder',\r\n        whiteSpace: \"nowrap\",\r\n        padding: 10,\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(18),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        color: \"darkslategray\"\r\n    },\r\n    signedOutMessage: {\r\n        color: 'cadetblue'\r\n    },\r\n    accDetails: {\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"space-evenly\"\r\n    },\r\n    addButton: {\r\n        display: \"flex\",\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        margin: \"auto\",\r\n        padding: 10,\r\n        backgroundColor: \"#edf9f3\",\r\n        '&:hover' : {\r\n            backgroundColor: \"#c7ecd8\",\r\n        }\r\n    },\r\n    emptyList: {\r\n        color: \"lightgray\"\r\n    }\r\n}));\r\n\r\n\r\nexport default function MyTournaments (props) {\r\n    const {user} = props;\r\n    const [recentTournaments, setRecent] = useState([]);\r\n    const styles = useStyles();\r\n    const [adminTournaments, setAdminTournaments] = useState([]);\r\n    const [favorites, setFavorites] = useState([]);\r\n    useEffect(() => {\r\n        if (!user) return\r\n        fetchApi('tournament/myTournaments', 'get')\r\n            .then(result => {\r\n                setAdminTournaments(result.admin || []);\r\n                setFavorites(result.favorites || []);\r\n            })\r\n            .catch(e => console.log(e));\r\n    }, [user]);\r\n    // load recent list from local storage\r\n    useEffect(() => {\r\n        const recent = localStorage.getItem('recentTournaments');\r\n        if (recent) {\r\n            setRecent(JSON.parse(recent));\r\n        }\r\n    }, [])\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"md\">\r\n                <div className={styles.root}>\r\n                    <Paper elevation={2}>\r\n                        <Typography variant=\"h5\"\r\n                                    align=\"center\"\r\n                                    className={styles.pageHeader}\r\n                        >\r\n                            MY TOURNAMENTS\r\n                        </Typography>\r\n                    </Paper>\r\n                    {/*FAVORITES*/}\r\n                    <Accordion defaultExpanded={!!user}>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"panel1a-header\"\r\n                        >\r\n                            <Typography className={styles.heading}>Favorites</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails className={styles.accDetails}>\r\n                            {\r\n                                !user &&\r\n                                <Typography className={styles.signedOutMessage}>\r\n                                    <Link to={{pathname: \"/login\", state: {prevPage: window.location.href}}}>\r\n                                        Sign in to view your favorites\r\n                                    </Link>\r\n                                </Typography>\r\n                            }\r\n                            {\r\n                                user && favorites.length === 0 &&\r\n                                    <Typography className={styles.emptyList}>\r\n                                        Empty\r\n                                    </Typography>\r\n                            }\r\n                            {\r\n                                user &&\r\n                                favorites.map(tournament => (\r\n                                    <TournamentItem key={tournament._id}\r\n                                                    name={tournament.name}\r\n                                                    isKnockout={tournament.isKnockout}\r\n                                                    createdBy={tournament.admin.username}\r\n                                                    tournamentId={tournament._id}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    {/*RECENT*/}\r\n                    <Accordion defaultExpanded={true}>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel2a-content\"\r\n                            id=\"panel2a-header\"\r\n                        >\r\n                            <Typography className={styles.heading}>Recent (On this browser)</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails className={styles.accDetails}>\r\n                            {\r\n                                recentTournaments.length === 0 &&\r\n                                <Typography className={styles.emptyList}>\r\n                                    Empty\r\n                                </Typography>\r\n                            }\r\n                            {\r\n                                recentTournaments.map(tournament => (\r\n                                    <TournamentItem key={tournament.tournamentId}\r\n                                                    name={tournament.name}\r\n                                                    isKnockout={tournament.isKnockout}\r\n                                                    createdBy={tournament.createdBy}\r\n                                                    tournamentId={tournament.tournamentId}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    {/*ADMIN*/}\r\n                    <Accordion defaultExpanded={!!user}>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel3a-content\"\r\n                            id=\"panel3a-header\"\r\n                        >\r\n                            <Typography className={styles.heading}>Admin</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails className={styles.accDetails}>\r\n                            {\r\n                                !user &&\r\n                                <Typography className={styles.signedOutMessage}>\r\n                                    <Link to={{pathname: \"/login\", state: {prevPage: window.location.href}}}>\r\n                                        Sign in to view tournaments you manage\r\n                                    </Link>\r\n                                </Typography>\r\n                            }\r\n                            {\r\n                                user && adminTournaments.length === 0 &&\r\n                                <Typography className={styles.emptyList}>\r\n                                    Empty\r\n                                </Typography>\r\n                            }\r\n                            {\r\n                                user &&\r\n                                adminTournaments.map(tournament => (\r\n                                    <TournamentItem key={tournament._id}\r\n                                                    name={tournament.name}\r\n                                                    isKnockout={tournament.isKnockout}\r\n                                                    createdBy={tournament.admin.username}\r\n                                                    tournamentId={tournament._id}\r\n                                    />\r\n                                ))\r\n                            }\r\n\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nconst useTournamentStyles = makeStyles((theme) => ({\r\n    tournamentBox: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: 5,\r\n        margin: 5,\r\n        borderRadius: 5,\r\n        width: \"48%\",\r\n        minWidth: 270,\r\n        maxWidth: \"100%\"\r\n    },\r\n    linkButton: {\r\n        textAlign: \"left\",\r\n        textDecoration: \"none\",\r\n        padding: 10,\r\n        borderRadius: 5,\r\n        backgroundColor: \"#f3edf9\",\r\n        '&:hover': {\r\n            backgroundColor: \"#f3edf9\",\r\n        }\r\n    },\r\n    name: {\r\n        paddingTop: 5,\r\n        paddingBottom: 5,\r\n        fontWeight: theme.typography.fontWeightBold,\r\n        width: \"100%\",\r\n        textAlign: \"left\"\r\n    },\r\n    tournamentInfo: {\r\n        padding: 5,\r\n        paddingLeft: 10,\r\n        textAlign: \"left\",\r\n        fontStyle: \"italic\",\r\n        color: \"darkslategray\",\r\n        backgroundColor: \"whitesmoke\"\r\n    }\r\n}));\r\n\r\nexport function TournamentItem (props) {\r\n    const {name, createdBy, isKnockout, tournamentId} = props;\r\n    const styles = useTournamentStyles();\r\n    return (\r\n        <Box className={`${styles.tournamentBox}`}\r\n             size=\"large\"\r\n        >\r\n            <Link\r\n                to={`/tournament/${tournamentId}`}\r\n                className={styles.linkButton}\r\n                variant=\"contained\"\r\n            >\r\n                <Typography className={styles.name}>{name}</Typography>\r\n            </Link>\r\n            <Typography\r\n                paragraph={true}\r\n                className={styles.tournamentInfo}\r\n            >\r\n                Type: {isKnockout? \"Knockout\" : \"League\"}\r\n                <br />\r\n                Created by {createdBy}\r\n            </Typography>\r\n        </Box>\r\n    )\r\n}","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nexport default function TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-force-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-force-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <>\r\n                    {children}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {basicFetch} from \"../../helpers/common\";\r\nimport WaitForServer from \"../loading\";\r\nimport SportsSoccerOutlinedIcon from \"@material-ui/icons/SportsSoccerOutlined\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useResults = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n    },\r\n    resultsContainer: {\r\n        paddingTop: 15,\r\n        paddingLeft: 5,\r\n        paddingRight: 5,\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"space-evenly\",\r\n        alignItems: \"center\"\r\n    },\r\n    resultSet: {\r\n        minWidth: \"40%\",\r\n        marginBottom: 15,\r\n        backgroundColor: \"whitesmoke\"\r\n    },\r\n    resultBox: {\r\n        display: \"flex\",\r\n        minHeight: 45,\r\n        padding: \"10px 0\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    tieBreaker: {\r\n        backgroundColor: \"pink\",\r\n    },\r\n    tieBreakerText: {\r\n        textAlign: \"center\",\r\n        fontWeight: \"bold\",\r\n        color: \"purple\"\r\n    },\r\n    goals: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        height: 40,\r\n        width: 40,\r\n        marginLeft: 2,\r\n        marginRight: 2,\r\n        borderRadius: 4,\r\n        backgroundColor: \"#C71585\",\r\n        color: \"whitesmoke\",\r\n        fontFamily: \"'Rubik Mono One', sans-serif !important\"\r\n    },\r\n    team: {\r\n        width: 95,\r\n        minWidth: 95,\r\n        alignSelf: \"center\",\r\n        fontWeight: \"bold\",\r\n        fontSize: 15,\r\n        wordBreak: \"break-word\",\r\n        textAlign: \"center\"\r\n    },\r\n    homeTeam: {\r\n        // textAlign: \"right\",\r\n        paddingRight: 10\r\n    },\r\n    awayTeam: {\r\n        // textAlign: \"left\",\r\n        paddingLeft: 10\r\n    },\r\n    advanced: {\r\n        color: \"seagreen\"\r\n    },\r\n    submit: {\r\n        marginTop: 10,\r\n        marginBottom: 20,\r\n        width: \"80%\"\r\n    },\r\n    error: {\r\n        color: 'red',\r\n        fontWeight: 'bold',\r\n        fontSize: \"1.2em\",\r\n        margin: \"auto\",\r\n        textAlign: \"center\"\r\n    },\r\n    resultInput: {\r\n        textAlign: \"center\",\r\n        fontWeight: \"bolder\",\r\n        backgroundColor: \"white\"\r\n    },\r\n    closed: {\r\n        fontWeight: \"bold\"\r\n    },\r\n    teamBadge: {\r\n        width: 25,\r\n        height: 25,\r\n        margin: \"0 5px\",\r\n        '& svg, & path': {\r\n            width: 20,\r\n            height: 20\r\n        }\r\n    }\r\n}));\r\nfunction handleInputResults (updateFunc) {\r\n    return (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        e.target.style.backgroundColor = \"white\";\r\n        if (value !== \"\" && (isNaN(parseInt(value)) || parseFloat(value) % 1 !== 0)) {\r\n            e.target.style.backgroundColor = \"#f4c7c7\";\r\n            return\r\n        }\r\n        updateFunc(prevState => ({...prevState, [name]: value}));\r\n    }\r\n}\r\nfunction getScoreString (score) {\r\n    if (score === 0 || score === \"0\") return \"0\"\r\n    if (!score) return \"\"\r\n    return score;\r\n}\r\nfunction addResult(goalsFor, goalsAgainst, results) {\r\n    if (isNaN(goalsFor) || isNaN(goalsAgainst)) results.push(null);\r\n    else results.push([goalsFor, goalsAgainst]);\r\n}\r\nfunction addTieBreaker(goalsFor, goalsAgainst, results) {\r\n    // don't do anything if tie breaker match isn't complete\r\n    if (isNaN(goalsFor) || isNaN(goalsAgainst)) return;\r\n    const homeResultArray = results[results.length -1];\r\n    if (homeResultArray) {\r\n        homeResultArray.push(goalsFor, goalsAgainst);\r\n    }\r\n}\r\n// only integers or Nan is passed as value to this function\r\nfunction isInvalidScore (inputName, value, opposingInputId) {\r\n    if (value < 0) {\r\n        document.getElementById(inputName).style.backgroundColor = \"#f4c7c7\";\r\n        return true\r\n    }\r\n    const opposingInput = document.getElementById(opposingInputId);\r\n    // for same team matches. value should not be a number anyways - input will be null\r\n    if (!isNaN(value) && !opposingInput.value) {\r\n        opposingInput.style.backgroundColor = \"#f4c7c7\";\r\n        return true\r\n    }\r\n    return false;\r\n\r\n}\r\n\r\nexport function KnockoutTeamResults (props) {\r\n    const {roundFixtures, teams, useTwoLegs, tournamentId, isUpdatingResults,\r\n            isCurrentRound, isFinal, useOneFinal} = props;\r\n    const [loading, setLoading] = useState(false);\r\n    const styles = useResults();\r\n    const setTeamNames = (fixture, teams) => {\r\n        let firstTeam, secondTeam, automaticWinner, firstTeamLogo, secondTeamLogo;\r\n        if (fixture.isEmpty) {\r\n            firstTeam = secondTeam = \"(empty)\";\r\n        } else if (roundFixtures[fixture.opponentIndex].isEmpty) {\r\n            firstTeam = teams[fixture.teamIndex].teamName;\r\n            firstTeamLogo = teams[fixture.teamIndex].teamLogo;\r\n            secondTeam = \"(empty)\";\r\n            automaticWinner = true;\r\n        } else {\r\n            firstTeam = teams[fixture.teamIndex].teamName;\r\n            firstTeamLogo = teams[fixture.teamIndex].teamLogo;\r\n            secondTeam = teams[roundFixtures[fixture.opponentIndex].teamIndex].teamName;\r\n            secondTeamLogo = teams[roundFixtures[fixture.opponentIndex].teamIndex].teamLogo;\r\n\r\n        }\r\n        return {firstTeam, secondTeam, automaticWinner, firstTeamLogo, secondTeamLogo};\r\n    }\r\n    const [updatedResults, setUpdatedResults] = useState({});\r\n    const handleResults = handleInputResults(setUpdatedResults);\r\n    const setInitialValues = (inputName, value) => {\r\n        setUpdatedResults(prevState => ({...prevState, [inputName]: value}));\r\n    }\r\n    const handleSubmit = () => {\r\n        const numberOfTeamsLeft = roundFixtures.length;\r\n        const results = [];\r\n        for (let i=0; i<numberOfTeamsLeft; i++) {\r\n            if (!useTwoLegs && i%2 === 1) return results.push(null);\r\n            const homeFor = parseInt(updatedResults[`homeGoalsFor${i}`]);\r\n            const homeAgainst = parseInt(updatedResults[`homeGoalsAgainst${i}`]);\r\n            const tieBreakerFor = parseInt(updatedResults[`tieBreakerGoalsFor${i}`]);\r\n            const tieBreakerAgainst = parseInt(updatedResults[`tieBreakerGoalsAgainst${i}`]);\r\n            const neutralFor = parseInt(updatedResults[`neutralGoalsFor${i}`]);\r\n            const neutralAgainst = parseInt(updatedResults[`neutralGoalsAgainst${i}`]);\r\n            // halt if score is invalid\r\n            if (useTwoLegs && (!(isFinal && useOneFinal))) {\r\n                if (isInvalidScore(`homeGoalsFor${i}`, homeFor, `homeGoalsAgainst${i}`)) return\r\n                if (isInvalidScore(`homeGoalsAgainst${i}`, homeAgainst, `homeGoalsFor${i}`)) return\r\n                addResult(homeFor, homeAgainst, results);\r\n            } else {\r\n                if (isInvalidScore(`neutralGoalsFor${i}`, neutralFor, `neutralGoalsAgainst${i}`)) return\r\n                if (isInvalidScore(`neutralGoalsAgainst${i}`, neutralAgainst, `neutralGoalsFor${i}`)) return\r\n                addResult(neutralFor, neutralAgainst, results);\r\n            }\r\n            if (isInvalidScore(`tieBreakerGoalsFor${i}`, tieBreakerFor, `tieBreakerGoalsAgainst${i}`)) return\r\n            if (isInvalidScore(`tieBreakerGoalsAgainst${i}`, tieBreakerAgainst, `tieBreakerGoalsFor${i}`)) return\r\n            addTieBreaker(tieBreakerFor, tieBreakerAgainst, results);\r\n        }\r\n        const values = {results};\r\n        const url = `tournament/${tournamentId}/knockoutResults`;\r\n        basicFetch(url, 'put', values, setLoading, true, true);\r\n    }\r\n\r\n    return (\r\n        <Container className={styles.resultsContainer} >\r\n            <WaitForServer wait={loading} />\r\n            {\r\n                ( !isCurrentRound && isUpdatingResults ) ?\r\n                    <Grid item className={styles.error}>\r\n                        <Typography>\r\n                            <span className={styles.closed}>THIS ROUND IS CLOSED</span>\r\n                            <br />\r\n                            <br />\r\n                            TO UPDATE RESULTS ON THIS TAB, CLEAR THE CURRENT ROUND FIXTURES\r\n                        </Typography>\r\n                    </Grid>\r\n                : isUpdatingResults &&\r\n                <>\r\n                    <Grid item className={styles.error}>\r\n                        <Typography>\r\n                            ALL UNSAVED CHANGES WILL BE CLEARED WHEN SWITCHING TABS\r\n                            <br />\r\n                            <br />\r\n                            ONLY FULL MATCH RESULT ENTRIES ARE SAVED\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"button\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={styles.submit}\r\n                        onClick={handleSubmit}\r\n                        disabled={!isCurrentRound}\r\n                    >\r\n                        Save Results\r\n                    </Button>\r\n                </>\r\n            }\r\n            {\r\n                useTwoLegs && (!(isFinal && useOneFinal)) &&\r\n                roundFixtures.map((fixture, index) => {\r\n                    if (index % 2 === 1) return null\r\n                    const {\r\n                        firstTeam, firstTeamLogo, secondTeam, secondTeamLogo, automaticWinner\r\n                    } = setTeamNames(fixture, teams);\r\n                    const homeFor = getScoreString(fixture.home.goalsFor);\r\n                    const homeAgainst = getScoreString(fixture.home.goalsAgainst);\r\n                    const awayFor = getScoreString(fixture.away.goalsFor);\r\n                    const awayAgainst = getScoreString(fixture.away.goalsAgainst);\r\n                    const tieBreakerFor = getScoreString(fixture.tieBreaker && fixture.tieBreaker.goalsFor);\r\n                    const tieBreakerAgainst = getScoreString(fixture.tieBreaker && fixture.tieBreaker.goalsAgainst);\r\n                    return (\r\n                        <Paper key={index} className={styles.resultSet}>\r\n                        {/*home result*/}\r\n                            <Result\r\n                                home={firstTeam}\r\n                                homeLogo={firstTeamLogo}\r\n                                away={secondTeam}\r\n                                awayLogo={secondTeamLogo}\r\n                                homeAutoAdvance={automaticWinner}\r\n                                goalsFor={homeFor || \"-\"}\r\n                                goalsAgainst={homeAgainst || \"-\"}\r\n                                isUpdatingResults={isUpdatingResults}\r\n                                goalsForComp={\r\n                                    <ResultInput defaultValue={homeFor}\r\n                                                 name={`homeGoalsFor${index}`}\r\n                                                 onChange={handleResults}\r\n                                                 onMount={setInitialValues}\r\n                                                 disabled={automaticWinner || !isCurrentRound}\r\n                                    />\r\n                                }\r\n                                goalsAgainstComp={\r\n                                    <ResultInput defaultValue={homeAgainst}\r\n                                                 name={`homeGoalsAgainst${index}`}\r\n                                                 onChange={handleResults}\r\n                                                 onMount={setInitialValues}\r\n                                                 disabled={automaticWinner || !isCurrentRound}\r\n                                    />\r\n                                }\r\n                            />\r\n                            {/*tiebreaker*/}\r\n                            {\r\n                                fixture.tieBreaker &&\r\n                                <Result\r\n                                    home={firstTeam}\r\n                                    homeLogo={firstTeamLogo}\r\n                                    away={secondTeam}\r\n                                    awayLogo={secondTeamLogo}\r\n                                    goalsFor={tieBreakerFor || \"-\"}\r\n                                    goalsAgainst={tieBreakerAgainst || \"-\"}\r\n                                    isUpdatingResults={isUpdatingResults}\r\n                                    isTieBreaker={true}\r\n                                    goalsForComp={\r\n                                        <ResultInput defaultValue={tieBreakerFor}\r\n                                                     name={`tieBreakerGoalsFor${index}`}\r\n                                                     onChange={handleResults}\r\n                                                     onMount={setInitialValues}\r\n                                                     disabled={!isCurrentRound}\r\n                                        />\r\n                                    }\r\n                                    goalsAgainstComp={\r\n                                        <ResultInput defaultValue={tieBreakerAgainst}\r\n                                                     name={`tieBreakerGoalsAgainst${index}`}\r\n                                                     onChange={handleResults}\r\n                                                     onMount={setInitialValues}\r\n                                                     disabled={!isCurrentRound}\r\n                                        />\r\n                                    }\r\n                                />\r\n                            }\r\n                            {/*away result */}\r\n                            <Result\r\n                                home={secondTeam}\r\n                                away={firstTeam}\r\n                                homeLogo={secondTeamLogo}\r\n                                awayLogo={firstTeamLogo}\r\n                                awayAutoAdvance={automaticWinner}\r\n                                goalsFor={awayAgainst || \"-\"}\r\n                                goalsAgainst={awayFor || \"-\"}\r\n                                isUpdatingResults={isUpdatingResults}\r\n                                goalsForComp={\r\n                                    <ResultInput defaultValue={awayAgainst}\r\n                                                 name={`homeGoalsFor${index+1}`}\r\n                                                 onChange={handleResults}\r\n                                                 onMount={setInitialValues}\r\n                                                 disabled={automaticWinner || !isCurrentRound}\r\n                                    />\r\n                                }\r\n                                goalsAgainstComp={\r\n                                    <ResultInput defaultValue={awayFor}\r\n                                                 name={`homeGoalsAgainst${index+1}`}\r\n                                                 onChange={handleResults}\r\n                                                 onMount={setInitialValues}\r\n                                                 disabled={automaticWinner || !isCurrentRound}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Paper>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                (!useTwoLegs || (isFinal && useOneFinal)) &&\r\n                roundFixtures.map((fixture, index) => {\r\n                    if (index % 2 === 1) return null\r\n                    const {\r\n                        firstTeam, firstTeamLogo, secondTeam, secondTeamLogo, automaticWinner\r\n                    } = setTeamNames(fixture, teams);\r\n                    const neutralFor = getScoreString(fixture.neutral.goalsFor);\r\n                    const neutralAgainst = getScoreString(fixture.neutral.goalsAgainst);\r\n                    const tieBreakerFor = getScoreString(fixture.tieBreaker && fixture.tieBreaker.goalsFor);\r\n                    const tieBreakerAgainst = getScoreString(fixture.tieBreaker && fixture.tieBreaker.goalsAgainst);\r\n                    return (\r\n                        <Paper key={index} className={styles.resultSet}>\r\n                            <Result\r\n                                home={firstTeam}\r\n                                homeLogo={firstTeamLogo}\r\n                                away={secondTeam}\r\n                                awayLogo={secondTeamLogo}\r\n                                homeAutoAdvance={automaticWinner}\r\n                                goalsFor={neutralFor || \"-\"}\r\n                                goalsAgainst={neutralAgainst || \"-\"}\r\n                                isUpdatingResults={isUpdatingResults}\r\n                                goalsForComp={\r\n                                    <ResultInput defaultValue={neutralFor}\r\n                                                 name={`neutralGoalsFor${index}`}\r\n                                                 onChange={handleResults}\r\n                                                 onMount={setInitialValues}\r\n                                                 disabled={automaticWinner || !isCurrentRound}\r\n                                    />\r\n                                }\r\n                                goalsAgainstComp={\r\n                                    <ResultInput defaultValue={neutralAgainst}\r\n                                                 name={`neutralGoalsAgainst${index}`}\r\n                                                 onChange={handleResults}\r\n                                                 onMount={setInitialValues}\r\n                                                 disabled={automaticWinner || !isCurrentRound}\r\n                                    />\r\n                                }\r\n                            />\r\n                            {/*tiebreaker*/}\r\n                            {\r\n                                fixture.tieBreaker &&\r\n                                <Result\r\n                                    home={firstTeam}\r\n                                    homeLogo={firstTeamLogo}\r\n                                    away={secondTeam}\r\n                                    awayLogo={secondTeamLogo}\r\n                                    goalsFor={tieBreakerFor || \"-\"}\r\n                                    goalsAgainst={tieBreakerAgainst || \"-\"}\r\n                                    isUpdatingResults={isUpdatingResults}\r\n                                    isTieBreaker={true}\r\n                                    goalsForComp={\r\n                                        <ResultInput defaultValue={tieBreakerFor}\r\n                                                     name={`tieBreakerGoalsFor${index}`}\r\n                                                     onChange={handleResults}\r\n                                                     onMount={setInitialValues}\r\n                                                     disabled={!isCurrentRound}\r\n                                        />\r\n                                    }\r\n                                    goalsAgainstComp={\r\n                                        <ResultInput defaultValue={tieBreakerAgainst}\r\n                                                     name={`tieBreakerGoalsAgainst${index}`}\r\n                                                     onChange={handleResults}\r\n                                                     onMount={setInitialValues}\r\n                                                     disabled={!isCurrentRound}\r\n                                        />\r\n                                    }\r\n                                />\r\n                            }\r\n                        </Paper>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                isUpdatingResults &&\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={styles.submit}\r\n                    onClick={handleSubmit}\r\n                    disabled={!isCurrentRound}\r\n                >\r\n                    Save Results\r\n                </Button>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport function LeagueTeamResults (props) {\r\n    const {teamFixtures, teamName, teamLogo, teamIndex, teams, useTwoLegs,\r\n            tournamentId ,isUpdatingResults} = props;\r\n    const [loading, setLoading] = useState(false);\r\n    const styles = useResults();\r\n\r\n    const [updatedResults, setUpdatedResults] = useState({});\r\n    const handleResults = handleInputResults(setUpdatedResults);\r\n    const setInitialValues = (inputName, value) => {\r\n        setUpdatedResults(prevState => ({...prevState, [inputName]: value}));\r\n    }\r\n    const handleSubmit = () => {\r\n        const numberOfTeams = teams.length;\r\n        const home = [];\r\n        const away = [];\r\n        const neutral = [];\r\n        for (let i=0; i<numberOfTeams; i++) {\r\n            const homeFor = parseInt(updatedResults[`homeGoalsFor${i}`]);\r\n            const homeAgainst = parseInt(updatedResults[`homeGoalsAgainst${i}`]);\r\n            const awayFor = parseInt(updatedResults[`awayGoalsFor${i}`]);\r\n            const awayAgainst = parseInt(updatedResults[`awayGoalsAgainst${i}`]);\r\n            const neutralFor = parseInt(updatedResults[`neutralGoalsFor${i}`]);\r\n            const neutralAgainst = parseInt(updatedResults[`neutralGoalsAgainst${i}`]);\r\n            // halt if score is invalid\r\n            if (useTwoLegs) {\r\n                if (isInvalidScore(`homeGoalsFor${i}`, homeFor, `homeGoalsAgainst${i}`)) return\r\n                if (isInvalidScore(`homeGoalsAgainst${i}`, homeAgainst, `homeGoalsFor${i}`)) return\r\n                if (isInvalidScore(`awayGoalsFor${i}`, awayFor, `awayGoalsAgainst${i}`)) return\r\n                if (isInvalidScore(`awayGoalsAgainst${i}`, awayAgainst, `awayGoalsFor${i}`)) return\r\n                addResult(homeFor, homeAgainst, home);\r\n                addResult(awayFor, awayAgainst, away);\r\n            } else {\r\n                if (isInvalidScore(`neutralGoalsFor${i}`, neutralFor, `neutralGoalsAgainst${i}`)) return\r\n                if (isInvalidScore(`neutralGoalsAgainst${i}`, neutralAgainst, `neutralGoalsFor${i}`)) return\r\n                addResult(neutralFor, neutralAgainst, neutral);\r\n            }\r\n        }\r\n        const values = {teamIndex, home, away, neutral};\r\n        const url = `tournament/${tournamentId}/leagueResults`;\r\n        basicFetch(url, 'put', values, setLoading, true, true);\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className={styles.resultsContainer}>\r\n            <WaitForServer wait={loading}/>\r\n            {\r\n                isUpdatingResults &&\r\n                    <>\r\n                        <Grid item className={styles.error}>\r\n                            <Typography>\r\n                                ALL UNSAVED CHANGES WILL BE CLEARED WHEN SWITCHING TABS\r\n                                <br />\r\n                                ONLY FULL MATCH RESULT ENTRIES ARE SAVED\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={styles.submit}\r\n                            onClick={handleSubmit}\r\n                        >\r\n                            Save Results\r\n                        </Button>\r\n                    </>\r\n            }\r\n            {\r\n                useTwoLegs &&\r\n                teamFixtures.home.map((fixture, index) => {\r\n                    if (fixture && fixture.isSameTeam) return null\r\n                    const homeGoalsFor = fixture && fixture.goalsFor.toString();\r\n                    const homeGoalsAgainst = fixture && fixture.goalsAgainst.toString();\r\n                    const awayGoalsFor = teamFixtures.away[index] && teamFixtures.away[index].goalsFor.toString();\r\n                    const awayGoalsAgainst = teamFixtures.away[index] && teamFixtures.away[index].goalsAgainst.toString();\r\n                    return (\r\n                        <Paper key={index} className={styles.resultSet}>\r\n                            {/*home result*/}\r\n                            <Result\r\n                                home={teamName}\r\n                                homeLogo={teamLogo}\r\n                                away={teams[index].teamName}\r\n                                awayLogo={teams[index].teamLogo}\r\n                                goalsFor={homeGoalsFor}\r\n                                goalsAgainst={homeGoalsAgainst}\r\n                                handleResults={handleResults}\r\n                                useTwoLegs={useTwoLegs}\r\n                                isUpdatingResults={isUpdatingResults}\r\n                                goalsForComp={\r\n                                    <ResultInput defaultValue={homeGoalsFor || \"\"}\r\n                                                 name={`homeGoalsFor${index}`}\r\n                                                 onChange={handleResults}\r\n                                                 onMount={setInitialValues}\r\n                                                 />\r\n                                }\r\n                                goalsAgainstComp={\r\n                                    <ResultInput defaultValue={homeGoalsAgainst || \"\"}\r\n                                                 name={`homeGoalsAgainst${index}`}\r\n                                                 onChange={handleResults}\r\n                                                 onMount={setInitialValues}\r\n                                    />\r\n                                }\r\n                            />\r\n                            {/*away result*/}\r\n                            {/*teams and scores are reversed on away*/}\r\n                            <Result\r\n                                home={teams[index].teamName}\r\n                                homeLogo={teams[index].teamLogo}\r\n                                away={teamName}\r\n                                awayLogo={teamLogo}\r\n                                goalsFor={awayGoalsAgainst}\r\n                                goalsAgainst={awayGoalsFor}\r\n                                handleResults={handleResults}\r\n                                useTwoLegs={useTwoLegs}\r\n                                isUpdatingResults={isUpdatingResults}\r\n                                goalsForComp={\r\n                                    <ResultInput defaultValue={awayGoalsAgainst || \"\"}\r\n                                                 name={`awayGoalsAgainst${index}`}\r\n                                                 onChange={handleResults}\r\n                                                 onMount={setInitialValues}\r\n                                    />\r\n                                }\r\n                                goalsAgainstComp={\r\n                                    <ResultInput defaultValue={awayGoalsFor || \"\"}\r\n                                                 name={`awayGoalsFor${index}`}\r\n                                                 onChange={handleResults}\r\n                                                 onMount={setInitialValues}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Paper>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                !useTwoLegs &&\r\n                teamFixtures.neutral.map((fixture, index) => {\r\n                    if (fixture && fixture.isSameTeam) return null\r\n                    const neutralGoalsFor = fixture && fixture.goalsFor.toString();\r\n                    const neutralGoalsAgainst = fixture && fixture.goalsAgainst.toString();\r\n                    return (\r\n                        <Paper key={index} className={styles.resultSet}>\r\n                            {/*neutral result*/}\r\n                            <Result\r\n                                home={teamName}\r\n                                homeLogo={teamLogo}\r\n                                away={teams[index].teamName}\r\n                                awayLogo={teams[index].teamLogo}\r\n                                goalsFor={neutralGoalsFor}\r\n                                goalsAgainst={neutralGoalsAgainst}\r\n                                handleResults={handleResults}\r\n                                useTwoLegs={useTwoLegs}\r\n                                isUpdatingResults={isUpdatingResults}\r\n                                goalsForComp={\r\n                                    <ResultInput defaultValue={neutralGoalsFor || \"\"}\r\n                                                 name={`neutralGoalsFor${index}`}\r\n                                                 onChange={handleResults}\r\n                                                 onMount={setInitialValues}\r\n                                    />\r\n                                }\r\n                                goalsAgainstComp={\r\n                                    <ResultInput defaultValue={neutralGoalsAgainst || \"\"}\r\n                                                 name={`neutralGoalsAgainst${index}`}\r\n                                                 onChange={handleResults}\r\n                                                 onMount={setInitialValues}\r\n                                    />\r\n                                }\r\n                            />\r\n                        </Paper>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                isUpdatingResults &&\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    className={styles.submit}\r\n                    onClick={handleSubmit}\r\n                >\r\n                    Save Results\r\n                </Button>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nfunction ResultInput (props) {\r\n    const {name, defaultValue, onChange, onMount, disabled} = props;\r\n    const styles = useResults();\r\n    useEffect(() => {\r\n        onMount(name, defaultValue);\r\n    }, []);\r\n    return (\r\n        <TextField\r\n            defaultValue={defaultValue}\r\n            disabled={disabled}\r\n            id={name}\r\n            inputProps={{max: 999, min: 0, className: styles.resultInput}}\r\n            name={name}\r\n            placeholder=\"-\"\r\n            onChange={onChange}\r\n            required\r\n            type=\"number\"\r\n            variant=\"outlined\"\r\n            // fullWidth\r\n            // id={teamNameInput}\r\n            // label=\"Team Name\"\r\n            // disabled={disabled || disableTeamNames}\r\n            // value={values[teamNameInput] || \"\"}\r\n        />\r\n    )\r\n}\r\n\r\nfunction Result (props) {\r\n    const styles = useResults();\r\n    const {home, away, goalsFor, goalsAgainst, homeAutoAdvance, awayAutoAdvance,\r\n            isUpdatingResults, goalsForComp, goalsAgainstComp, isTieBreaker,\r\n                homeLogo, awayLogo} = props;\r\n    return (\r\n        <>\r\n            {\r\n                isTieBreaker &&\r\n                    <Box className={styles.tieBreaker}>\r\n                        <Typography className={styles.tieBreakerText}>TIE-BREAKER</Typography>\r\n                    </Box>\r\n            }\r\n            <Box className={`${styles.resultBox} ${isTieBreaker?styles.tieBreaker:\"\"}`}>\r\n                {\r\n                    !isUpdatingResults &&\r\n                    <Avatar alt=\"Team badge\"\r\n                            src={homeLogo}\r\n                            className={styles.teamBadge}\r\n                    >\r\n                        {!homeLogo && <SportsSoccerOutlinedIcon />}\r\n                    </Avatar>\r\n                }\r\n\r\n                <Typography className={`${styles.team} ${styles.homeTeam}`}>\r\n                    {home}\r\n                    {\r\n                        homeAutoAdvance &&\r\n                        <>\r\n                            <br />\r\n                            <span className={styles.advanced}>(auto adv)</span>\r\n                        </>\r\n                    }\r\n                </Typography>\r\n                {\r\n                    !isUpdatingResults &&\r\n                    <>\r\n                        <Typography className={styles.goals}>\r\n                            {isNaN(parseInt(goalsFor)) ? \"-\" : goalsFor}\r\n                        </Typography>\r\n                        <Typography className={styles.goals}>\r\n                            {isNaN(parseInt(goalsAgainst)) ? \"-\" : goalsAgainst}\r\n                        </Typography>\r\n                    </>\r\n                }\r\n                {\r\n                    isUpdatingResults &&\r\n                    <>\r\n                        {goalsForComp}\r\n                        {goalsAgainstComp}\r\n                    </>\r\n                }\r\n                <Typography className={`${styles.team} ${styles.awayTeam}`}>\r\n                    {away}\r\n                    {\r\n                        awayAutoAdvance &&\r\n                        <>\r\n                            <br />\r\n                            <span className={styles.advanced}>(auto adv)</span>\r\n                        </>\r\n                    }\r\n                </Typography>\r\n                {\r\n                    !isUpdatingResults &&\r\n                    <Avatar alt=\"Team badge\"\r\n                            src={awayLogo}\r\n                            className={styles.teamBadge}\r\n                    >\r\n                        {!awayLogo && <SportsSoccerOutlinedIcon />}\r\n                    </Avatar>\r\n                }\r\n            </Box>\r\n        </>\r\n\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TabPanel from \"./tab-panel\";\r\nimport {LeagueTeamResults, KnockoutTeamResults} from \"./fixtures-dir/fixtures\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n    },\r\n    tabPanelContainer: {\r\n        marginTop: 10\r\n    },\r\n    appBarContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        marginTop: 10\r\n    }\r\n}));\r\n\r\nconst roundLabels = {\r\n    roundOf32: 'Round of 32',\r\n    roundOf16: 'Last 16',\r\n    roundOf8: 'Quarter-Finals',\r\n    roundOf4: 'Semi-Finals',\r\n    roundOf2: 'Final'\r\n}\r\n\r\nexport function KnockoutFixtures (props) {\r\n    const {teams, fixtures, useTwoLegs, useOneFinal, isUpdatingResults, tournamentId} = props;\r\n    const {startingRound, currentRound} = fixtures;\r\n    const styles = useStyles();\r\n    const [value, setValue] = useState(currentRound);\r\n    const [availableRounds, setAvailableRounds] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!startingRound || !currentRound) return\r\n        let startingNumber = parseInt(startingRound.slice(7));\r\n        const currentNumber = parseInt(currentRound.slice(7));\r\n        let roundsArray = [];\r\n        do {\r\n            roundsArray.push(`roundOf${startingNumber}`);\r\n            startingNumber /= 2;\r\n        } while (startingNumber >= currentNumber);\r\n        setAvailableRounds(roundsArray);\r\n    }, [startingRound, currentRound])\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    if (availableRounds.length === 0) return null\r\n    return (\r\n        <Paper className={styles.root}>\r\n            <AppBar position=\"sticky\" color=\"default\" className={styles.appBarContainer}>\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"on\"\r\n                    aria-label=\"scrollable auto tabs example\"\r\n                >\r\n                    {\r\n                        availableRounds.map((round, index) => (\r\n                            <Tab\r\n                                key={index}\r\n                                value={round}\r\n                                label={roundLabels[round]}\r\n                                />\r\n                        ))\r\n                    }\r\n                </Tabs>\r\n            </AppBar>\r\n            <Box className={styles.tabPanelContainer}>\r\n                {\r\n                    availableRounds.map(round => (\r\n                        <TabPanel index={round}\r\n                                  value={value}\r\n                                  key={round}\r\n                        >\r\n                            <KnockoutTeamResults\r\n                                roundFixtures={fixtures[round]}\r\n                                teams={teams}\r\n                                useTwoLegs={useTwoLegs}\r\n                                useOneFinal={useOneFinal}\r\n                                tournamentId={tournamentId}\r\n                                isCurrentRound={value === fixtures.currentRound}\r\n                                isFinal={value === \"roundOf2\"}\r\n                                isUpdatingResults={isUpdatingResults}\r\n                            />\r\n                        </TabPanel>\r\n                    ))\r\n                }\r\n            </Box>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport function LeagueFixtures (props) {\r\n    const {teams, fixtures, useTwoLegs, isUpdatingResults, tournamentId} = props;\r\n    const styles = useStyles();\r\n    const [value, setValue] = useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Paper className={styles.root}>\r\n            <AppBar position=\"sticky\" color=\"default\" className={styles.appBarContainer}>\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"on\"\r\n                    aria-label=\"scrollable auto tabs example\"\r\n                >\r\n                    {\r\n                        teams.map((team, index) => (\r\n                            <Tab\r\n                                key={index}\r\n                                label={team.teamName}\r\n                                />\r\n                        ))\r\n                    }\r\n                </Tabs>\r\n            </AppBar>\r\n            <Box className={styles.tabPanelContainer}>\r\n                {\r\n                    teams.map((team, index) => (\r\n                        <TabPanel index={index}\r\n                                  value={value}\r\n                                  key={index}\r\n                        >\r\n                            <LeagueTeamResults\r\n                                teamFixtures={fixtures[index]}\r\n                                teams={teams}\r\n                                useTwoLegs={useTwoLegs}\r\n                                teamName={team.teamName}\r\n                                teamLogo={team.teamLogo}\r\n                                teamIndex={index}\r\n                                tournamentId={tournamentId}\r\n                                isUpdatingResults={isUpdatingResults}\r\n                            />\r\n                        </TabPanel>\r\n                    ))\r\n                }\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        width: 35,\r\n        paddingLeft: 0,\r\n        paddingRight: 0,\r\n        color: theme.palette.common.white,\r\n        backgroundColor: \"#4e4eb1\"\r\n    },\r\n    body: {\r\n        paddingLeft: 0,\r\n        paddingRight: 0,\r\n        fontSize: 14,\r\n        border: \"1px solid rgba(224, 224, 224, 0.3)\"\r\n    },\r\n}))(TableCell);\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 'fit-content',\r\n    },\r\n    teamName: {\r\n        fontWeight: \"bold\",\r\n        paddingLeft: 10,\r\n        paddingRight: 5\r\n    }\r\n});\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\nfunction createTable(position, teamName, played, won, drawn, lost, goalsFor,\r\n                     goalsAgainst, goalDifference, points) {\r\n    return {\r\n        position, teamName, played, won, drawn, lost, goalsFor,\r\n        goalsAgainst, goalDifference, points\r\n    }\r\n}\r\n\r\nexport function CustomizedTables(props) {\r\n    const styles = useStyles();\r\n    const rows = props.tableData.map((team, index) => (\r\n        createTable(index +1, team.teamDetails.teamName.toUpperCase(), team.played,team.won,\r\n            team.drawn, team.lost, team.goalsFor, team.goalsAgainst, team.goalDifference,\r\n            team.points)\r\n    ));\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table className={styles.table}\r\n                   aria-label=\"customized table\"\r\n                   size=\"medium\"\r\n                   stickyHeader={true}\r\n            >\r\n                <TableHead>\r\n                    <TableRow>\r\n                    {\r\n                        ['Pos','Team','Pl','W','D','L','GF','GA','GD','Pts'].map((colHead, index) => (\r\n                            <StyledTableCell align=\"center\"\r\n                                             size=\"small\"\r\n                                             key={index}\r\n                            >\r\n                                {colHead}\r\n                            </StyledTableCell>\r\n                        ))\r\n                    }\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows.map((row) => (\r\n                        <StyledTableRow key={`${row.teamName}${row.points}`}>\r\n                            {\r\n                                ['position', 'teamName', 'played', 'won', 'drawn', 'lost', 'goalsFor',\r\n                                    'goalsAgainst', 'goalDifference', 'points'].map((value, index) => (\r\n                                    <StyledTableCell align={value === 'teamName'?'left':'center'}\r\n                                                     size=\"small\"\r\n                                                     key={index}\r\n                                                     className={styles[value]}\r\n                                     >\r\n                                        {row[value]}\r\n                                    </StyledTableCell>\r\n                                ))\r\n                            }\r\n                        </StyledTableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default function LeagueTable (props) {\r\n    return (\r\n        <CustomizedTables tableData={props.tableData}/>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport AddCircleOutlineOutlinedIcon from '@material-ui/icons/AddCircleOutlineOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useFormik} from \"formik\";\r\nimport {fetchApi} from \"../../helpers/common\";\r\nimport {useHistory, Link} from \"react-router-dom\";\r\nimport WaitForServer from \"../loading\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: 20,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        height: 60,\r\n        fontSize: 19\r\n    },\r\n    typeLabel: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\"\r\n    },\r\n    tournamentType: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        marginLeft: 20,\r\n        marginRight: 20\r\n    },\r\n    nameField: {\r\n        borderRadius: 5,\r\n        fontSize: 20,\r\n    },\r\n    checkbox: {\r\n        '& input': {\r\n           // transform: \"scale(2)\"\r\n        }\r\n    },\r\n    checkboxLabel: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 20,\r\n    },\r\n    moreInfo: {\r\n        color: \"dimgray\"\r\n    },\r\n    error: {\r\n        color: 'red',\r\n        fontSize: '1.2em',\r\n        margin: \"auto\",\r\n        textAlign: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function CreateNew(props) {\r\n\r\n    return (\r\n        <TournamentForm isCreating={true}\r\n                        user={props.user}\r\n        />\r\n    )\r\n}\r\n\r\nexport function TournamentForm (props) {\r\n    let {isCreating, tournament, user} = props;\r\n    tournament = tournament || {};\r\n    const {isKnockout, useRealTeams, useTwoLegs, useOneFinal, useAwayGoals,\r\n        name, _id: tournamentId, hasLeagueFixturesGenerated, currentRound} = tournament;\r\n    const allDisabled = hasLeagueFixturesGenerated || !!currentRound;\r\n    const styles = useStyles();\r\n    const [wait, setWaitForServer] = useState(false);\r\n    const [serverError, setServerError] = useState(\"\");\r\n    const [tournamentProps, setTournamentProps] = useState({\r\n        isKnockout: isCreating ? null : isKnockout? 1 : 0,\r\n        useRealTeams: useRealTeams ? 1 : 0,\r\n        useTwoLegs: useTwoLegs ? 1 : 0,\r\n        useOneFinal: useOneFinal ? 1 : 0,\r\n        useAwayGoals: useAwayGoals ? 1 : 0\r\n    });\r\n    const handleRadioChange = (prop) => {\r\n        return (e) => {\r\n            if (!e.target.checked) {\r\n                return setTournamentProps(prevState => ({...prevState, [prop]: 0}));\r\n            }\r\n            setTournamentProps(prevState => ({...prevState, [prop]: parseInt(e.target.value)}));\r\n        }\r\n    }\r\n    const history = useHistory();\r\n    const formik = useFormik({\r\n        initialValues: { name: name || \"\" },\r\n        // validationSchema,\r\n        onSubmit: values => {\r\n            setWaitForServer(true);\r\n            setServerError(\"\");\r\n            const allProps = Object.assign(values, tournamentProps);\r\n            if (values.isKnockout === null) {\r\n                setWaitForServer(false);\r\n                return setServerError(\"Tournament type required\");\r\n            }\r\n            setTimeout(async ()=>{\r\n                try {\r\n                    const url = isCreating ? 'tournament' : `tournament/${tournamentId}`;\r\n                    const method = isCreating ? 'post' : 'put';\r\n                    await fetchApi( url, method, allProps);\r\n                    if (isCreating) {\r\n                        history.push(\"/\");\r\n                    } else {\r\n                        window.location.reload();\r\n                    }\r\n                } catch (err) {\r\n                    setServerError(err);\r\n                } finally {\r\n                    setWaitForServer(false);\r\n                }\r\n            }, 2000);\r\n        }\r\n    });\r\n    if (isCreating && !user) {\r\n        return (\r\n            <Container component=\"main\"\r\n                       maxWidth=\"md\"\r\n                       style={{padding: \"30px\"}}\r\n            >\r\n                <Typography>\r\n                    <Link to={{pathname: \"/login\", state: {prevPage: window.location.href}}}>\r\n                        Log in to create tournaments.\r\n                    </Link>\r\n                </Typography>\r\n            </Container>\r\n        )\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"md\">\r\n            <CssBaseline />\r\n            <WaitForServer wait={wait} />\r\n            <div className={styles.paper}>\r\n                <Avatar className={styles.avatar}>\r\n                    <AddCircleOutlineOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    {isCreating ? \"New Tournament\" : \"Update Tournament\"}\r\n                </Typography>\r\n                <form className={styles.form} onSubmit={formik.handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth={true}\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                label=\"Tournament Name\"\r\n                                name=\"name\"\r\n                                autoComplete=\"tournamentName\"\r\n                                InputProps={{className: styles.nameField}}\r\n                                value={formik.values.name}\r\n                                onChange={formik.handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item className={styles.error}>\r\n                            {formik.touched.name && formik.errors.name}\r\n                        </Grid>\r\n                        <Grid item className={styles.error}>\r\n                            {\r\n                                allDisabled &&\r\n                                <Typography>\r\n                                    You can only change the name as this tournament is already in progress.\r\n                                    <br />\r\n                                    <br />\r\n                                    In order to update other settings, reset the tournament's fixtures.\r\n                                </Typography>\r\n                            }\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            {/*<FormLabel component=\"legend\">Type</FormLabel>*/}\r\n                            <FormControl component=\"fieldset\" className={styles.typeLabel}>\r\n                                <Typography>Type: </Typography>\r\n                                <RadioGroup aria-label=\"isKnockout\"\r\n                                            name=\"isKnockout\"\r\n                                            value={tournamentProps.isKnockout}\r\n                                            onChange={handleRadioChange('isKnockout')}\r\n                                            className={styles.tournamentType}\r\n                                >\r\n                                    <FormControlLabel value={0}\r\n                                                      disabled={allDisabled}\r\n                                                      control={<Radio />}\r\n                                                      label={<Typography className={styles.checkboxLabel}>League</Typography>}/>\r\n                                    <FormControlLabel value={1}\r\n                                                      disabled={allDisabled}\r\n                                                      control={<Radio />}\r\n                                                      label={<Typography className={styles.checkboxLabel}>Knockout</Typography>}/>\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n\r\n                        </Grid>\r\n                        {/*USE REAL TEAMS OPTION*/}\r\n                        <CheckBoxField value={1}\r\n                                       disabled={allDisabled}\r\n                                       checked={!!tournamentProps.useRealTeams}\r\n                                       onChange={handleRadioChange('useRealTeams')}\r\n                                       label={\"Use Real Teams\"}\r\n                                       moreInfoComponent={<Typography className={styles.moreInfo}>\r\n                                           Show real club options when adding teams\r\n                                       </Typography>}\r\n                        />\r\n                        {/*TWO LEGS OPTION*/}\r\n                        <CheckBoxField value={1}\r\n                                       disabled={allDisabled}\r\n                                       checked={!!tournamentProps.useTwoLegs}\r\n                                       onChange={handleRadioChange('useTwoLegs')}\r\n                                       label={\"Use Two Legs\"}\r\n                                       moreInfoComponent={<Typography className={styles.moreInfo}>\r\n                                           Each encounter will have a home and away match\r\n                                       </Typography>}\r\n                        />\r\n                        {/*ONE FINAL OPTION*/}\r\n                        <CheckBoxField value={1}\r\n                                       disabled={tournamentProps.isKnockout === null ||\r\n                                        tournamentProps.isKnockout === 0 ||\r\n                                        tournamentProps.useTwoLegs !== 1 || allDisabled}\r\n                                       checked={!!tournamentProps.useOneFinal}\r\n                                       onChange={handleRadioChange('useOneFinal')}\r\n                                       label={\"Use One Leg Final\"}\r\n                                       moreInfoComponent={<Typography className={styles.moreInfo}>\r\n                                           Only enabled if type is Knockout and \"Use Two Legs\" is selected\r\n                                           <br />\r\n                                           <br />\r\n                                           For knockout tournaments with two legs, the final will have only one neutral match\r\n                                       </Typography>}\r\n                        />\r\n                        {/*AWAY GOALS TIE BREAKER OPTION*/}\r\n                        <CheckBoxField value={1}\r\n                                       disabled={tournamentProps.isKnockout === null ||\r\n                                        tournamentProps.isKnockout === 0 ||\r\n                                        tournamentProps.useTwoLegs !== 1 || allDisabled}\r\n                                       checked={!!tournamentProps.useAwayGoals}\r\n                                       onChange={handleRadioChange('useAwayGoals')}\r\n                                       label={\"Use Away Goals Tiebreaker\"}\r\n                                       moreInfoComponent={<Typography className={styles.moreInfo}>\r\n                                           Only enabled if type is Knockout and \"Use Two Legs\" is selected\r\n                                           <br />\r\n                                           <br />\r\n                                           If the round is still a tie after both home and away matches are completed,\r\n                                           the team who scored more goals away will progress to the next round.\r\n                                       </Typography>}\r\n                        />\r\n                        <Grid item className={styles.error}>\r\n                            {serverError}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={styles.submit}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\nfunction CheckBoxField (props) {\r\n    const styles = useStyles();\r\n    const {value, disabled, onChange, checked, moreInfoComponent, label} = props;\r\n    return (\r\n        <>\r\n            <Grid item xs={12}>\r\n                <FormControlLabel\r\n                    label={<Typography className={styles.checkboxLabel}>{label}</Typography>}\r\n                    control={<Checkbox className={styles.checkbox}\r\n                                       value={value}\r\n                                       color=\"secondary\"\r\n                                       disabled={disabled}\r\n                                       onChange={onChange}\r\n                                       checked={checked}\r\n                    />}\r\n                />\r\n            </Grid>\r\n            <Grid container justify=\"flex-start\">\r\n                <Grid item>\r\n                    {moreInfoComponent}\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, {useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {basicFetch} from \"../../helpers/common\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport WaitForServer from \"../loading\";\r\n\r\nconst useAdminActionsStyle = makeStyles((theme) => ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: 20,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    error: {\r\n        color: 'red',\r\n        fontSize: '1.2em',\r\n        margin: \"auto\",\r\n        textAlign: \"center\"\r\n    },\r\n    actionSet: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        paddingRight: 5,\r\n        backgroundColor: \"wheat\"\r\n    },\r\n    resetContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n        width: '100%'\r\n    },\r\n    submit: {\r\n        margin: 15,\r\n        height: \"fit-content\",\r\n        width: \"fit-content\",\r\n        padding: \"10px 30px\",\r\n        fontSize: 19,\r\n        flex: 0.3\r\n    },\r\n    moreInfo: {\r\n        flex: 0.7\r\n    },\r\n    confirmActionInput: {\r\n        flex: 0.7,\r\n        marginRight: 20\r\n    },\r\n    actionButtonLabel: {\r\n        fontSize: 15\r\n    }\r\n\r\n}));\r\nexport default function AdminActions (props) {\r\n    const {setAdminPage, tournamentId, tournament} = props;\r\n    const [loading, setLoading] = useState(false);\r\n    const [isResettingFixtures, setResettingFixtures] = useState(false);\r\n    const [isResettingRound, setResettingRound] = useState(false);\r\n    const [isDeleting, setDeleting] = useState(false);\r\n\r\n    const handleGenerateLeagueFixtures = () => {\r\n        const onSuccess = () => window.location.href = `tournament/${tournamentId}/fixtures`\r\n        const url = `tournament/${tournamentId}/leagueFixtures`;\r\n        basicFetch(url, 'post',{}, setLoading, false, true, onSuccess);\r\n    }\r\n    const handleGenerateKnockoutFixtures = () => {\r\n        const onSuccess = () => window.location.href = `tournament/${tournamentId}/fixtures`;\r\n        const url = `tournament/${tournamentId}/knockoutFixtures`;\r\n        basicFetch(url, 'post',{}, setLoading, false, true, onSuccess);\r\n    }\r\n    const toggleResetForm = () => {\r\n        setResettingFixtures(prevState => !prevState);\r\n    }\r\n    const handleResetAllFixtures = () => {\r\n        const reset = ['reset', 'Reset', 'RESET'];\r\n        if (!reset.includes(document.getElementById('confirmReset').value )) {\r\n            return alert(\"Type 'reset' to complete this action\");\r\n        }\r\n        const url = `tournament/${tournamentId}/resetAllFixtures`;\r\n        basicFetch(url, 'delete', {}, setLoading, true, true);\r\n    }\r\n    const toggleResetRound = () => {\r\n        setResettingRound(prevState => !prevState);\r\n    }\r\n    const handleResetRound = () => {\r\n        const reset = ['round', 'Round', 'ROUND'];\r\n        if (!reset.includes(document.getElementById('confirmResetRound').value )) {\r\n            return alert(\"Type 'round' to complete this action\");\r\n        }\r\n        const url = `tournament/${tournamentId}/resetRound?round=${tournament.currentRound}`;\r\n        basicFetch(url, 'delete', {}, setLoading, true, true);\r\n    }\r\n    const toggleDelete = () => {\r\n        setDeleting(prevState => !prevState);\r\n    }\r\n    const handleDelete = () => {\r\n        const allowedValues = ['delete', 'Delete', 'DELETE'];\r\n        if (!allowedValues.includes(document.getElementById('confirmDelete').value)) {\r\n            return alert(\"Type 'delete' to complete this action\");\r\n        }\r\n        const url = `tournament/${tournamentId}`\r\n        const onSuccess = () => window.location.href = \"/\";\r\n        basicFetch(url, 'delete', {}, setLoading, false, true, onSuccess);\r\n    }\r\n    const handleAdminNavigation = (newPage) => {\r\n        return () => setAdminPage(newPage);\r\n    }\r\n    const styles = useAdminActionsStyle();\r\n    return (\r\n        <Container className={styles.container}>\r\n            <WaitForServer wait={loading} />\r\n            <ActionSet primaryButtonText={\"Change Tournament Settings\"}\r\n                       onClickPrimary={handleAdminNavigation('settings')}\r\n                       useSecondary={false}\r\n                       moreInfoComponent={<Typography className={styles.moreInfo}>\r\n                           Modify tournament settings.\r\n                           <br />\r\n                           <br />\r\n                           Some settings will be disabled if tournament is already in progress.\r\n                       </Typography>}\r\n            />\r\n            <ActionSet primaryButtonText={\"Update Team/Player Names\"}\r\n                       onClickPrimary={handleAdminNavigation('teams')}\r\n                       useSecondary={false}\r\n                       moreInfoComponent={<Typography className={styles.moreInfo}>\r\n                           Add teams and their owners (player names).\r\n                           <br />\r\n                           <br />\r\n                           All teams are required to have a name for fixtures can be generated.\r\n                       </Typography>}\r\n            />\r\n            {\r\n                tournament.isKnockout &&\r\n                <>\r\n                    <ActionSet primaryButtonText={\"Generate next knockout round fixtures\"}\r\n                               onClickPrimary={handleGenerateKnockoutFixtures}\r\n                               useSecondary={false}\r\n                               disabled={!tournament.isKnockout || tournament.isComplete}\r\n                               moreInfoComponent={<Typography className={styles.moreInfo}>\r\n                                   Create fixtures for the next round using the existing teams or winners from the last round.\r\n                                   <br />\r\n                                   <br />\r\n                                   All teams are required to have a name before fixtures can be generated.\r\n                                   <br />\r\n                                   You will be unable to change team names after performing this action.\r\n                               </Typography>}\r\n                    />\r\n                    {/*RESETTING CURRENT ROUND*/}\r\n                    <ActionSet primaryButtonText={\"Reset Current Round\"}\r\n                               secondaryButtonText={\"Confirm Reset\"}\r\n                               onClickPrimary={toggleResetRound}\r\n                               onClickSecondary={handleResetRound}\r\n                               color={\"secondary\"}\r\n                               useSecondary={isResettingRound}\r\n                               disabled={!tournament.isKnockout || !tournament.currentRound}\r\n                               inputId={\"confirmResetRound\"}\r\n                               inputLabel={\"Type 'round' to confirm this action\"}\r\n                               moreInfoComponent={<Typography className={styles.moreInfo}>\r\n                                   Clear current round fixtures and go back to previous round.\r\n                               </Typography>}\r\n                    />\r\n                </>\r\n            }\r\n            {\r\n                !tournament.isKnockout &&\r\n                <ActionSet primaryButtonText={\"Generate League Fixtures\"}\r\n                           onClickPrimary={handleGenerateLeagueFixtures}\r\n                           useSecondary={false}\r\n                           disabled={tournament.isKnockout || tournament.hasLeagueFixturesGenerated}\r\n                           moreInfoComponent={<Typography className={styles.moreInfo}>\r\n                               Create league fixtures for all teams.\r\n                               <br />\r\n                               <br />\r\n                               All teams are required to have a name before fixtures can be generated.\r\n                               <br />\r\n                               You will be unable to change team names after performing this action.\r\n                           </Typography>}\r\n                />\r\n            }\r\n\r\n            {/*RESETTING ALL FIXTURES*/}\r\n            <ActionSet primaryButtonText={\"Reset All Fixtures\"}\r\n                       secondaryButtonText={\"Confirm Reset\"}\r\n                       onClickPrimary={toggleResetForm}\r\n                       onClickSecondary={handleResetAllFixtures}\r\n                       color={\"secondary\"}\r\n                       useSecondary={isResettingFixtures}\r\n                       disabled={!tournament.hasLeagueFixturesGenerated && !tournament.currentRound}\r\n                       inputId={\"confirmReset\"}\r\n                       inputLabel={\"Type 'reset' to confirm this action\"}\r\n                       moreInfoComponent={<Typography className={styles.moreInfo}>\r\n                           Clear all generated fixtures.\r\n                       </Typography>}\r\n            />\r\n            {/*DELETING TOURNAMENT*/}\r\n            <ActionSet primaryButtonText={\"Delete Tournament\"}\r\n                       secondaryButtonText={\"Confirm Delete\"}\r\n                       onClickPrimary={toggleDelete}\r\n                       onClickSecondary={handleDelete}\r\n                       color={\"secondary\"}\r\n                       useSecondary={isDeleting}\r\n                       inputId={\"confirmDelete\"}\r\n                       inputLabel={\"Type 'delete' to confirm this action\"}\r\n                       moreInfoComponent={<Typography className={styles.moreInfo}>\r\n                           Delete tournament and data associated with it.\r\n                       </Typography>}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nfunction ActionSet (props) {\r\n    const styles = useAdminActionsStyle();\r\n    const {onClickPrimary, disabled, primaryButtonText, moreInfoComponent,\r\n        useSecondary, onClickSecondary, secondaryButtonText,\r\n        inputName, inputId, inputLabel, color} = props;\r\n    return (\r\n        <Paper className={styles.actionSet}>\r\n            <div className={styles.resetContainer}>\r\n                <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    color={color || \"primary\"}\r\n                    className={styles.submit}\r\n                    onClick={onClickPrimary}\r\n                    fullWidth={true}\r\n                    disabled={disabled}\r\n                >\r\n                    <Typography className={styles.actionButtonLabel}>\r\n                        {primaryButtonText}\r\n                    </Typography>\r\n                </Button>\r\n                {moreInfoComponent}\r\n            </div>\r\n            {\r\n                useSecondary &&\r\n                <div className={styles.resetContainer}>\r\n                    <Button\r\n                        type=\"button\"\r\n                        variant=\"contained\"\r\n                        color={\"primary\"}\r\n                        className={styles.submit}\r\n                        onClick={onClickSecondary}\r\n                        fullWidth={true}\r\n                    >\r\n                        <Typography className={styles.actionButtonLabel}>\r\n                            {secondaryButtonText}\r\n                        </Typography>\r\n                    </Button>\r\n                    <TextField\r\n                        autoComplete=\"confirm reset round\"\r\n                        name={inputName}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                        id={inputId}\r\n                        label={inputLabel}\r\n                        className={styles.confirmActionInput}\r\n                    />\r\n                </div>\r\n            }\r\n        </Paper>\r\n    )\r\n}","import Modal from \"@material-ui/core/Modal\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    loadingContainer: {\r\n        outline: \"none\"\r\n    },\r\n    searchContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"90%\",\r\n        padding: 10,\r\n        maxHeight: \"calc(80vh - 80px)\",\r\n        borderRadius: 10,\r\n        overflow: \"auto\",\r\n        backgroundColor: \"whitesmoke\"\r\n    },\r\n    cancelContainer: {\r\n        width: \"100%\",\r\n        height: 60,\r\n        margin: 10,\r\n        padding: 0,\r\n        textAlign: \"center\",\r\n        backgroundColor: \"transparent\"\r\n    },\r\n    cancelButton: {\r\n        backgroundColor: \"white\",\r\n        position: \"sticky\",\r\n        padding: 0,\r\n        '& svg': {\r\n            width: 50,\r\n            height: 50\r\n        }\r\n    },\r\n    resultButton: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        backgroundColor: \"#d8e7e8\",\r\n        '&:hover': {\r\n            backgroundColor: \"#c8dddf\",\r\n        },\r\n        width: 300,\r\n        padding: 10,\r\n        margin: 10,\r\n        borderRadius: 8\r\n    },\r\n    teamBadge: {\r\n        width: 60,\r\n        height: 60,\r\n        margin: \"0 10px\"\r\n    }\r\n}));\r\n\r\nexport default function TeamSearch (props) {\r\n    const {useActivity, handleClose, inputName, logoInputName, handleSelectedTeam} = props;\r\n\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [results, setResults] = useState([]);\r\n\r\n    const styles = useStyles();\r\n\r\n    const handleResultClick = (teamName, teamLogo) => {\r\n        return () => {\r\n            handleSelectedTeam(inputName, logoInputName, teamName, teamLogo);\r\n            handleClose();\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (useActivity) {\r\n            setLoading(true);\r\n            const searchString = document.getElementById(inputName).value;\r\n            if (!searchString) return\r\n            fetch(\r\n                `https://www.thesportsdb.com/api/v1/json/1/searchteams.php?t=${searchString}`,\r\n            )\r\n                .then(response => response.json())\r\n                .then(results => {\r\n                    if (!results) return\r\n                    if (!results.teams) return\r\n                    setResults(results.teams);\r\n                })\r\n                .catch(e => console.log(e))\r\n                .finally(() => setLoading(false));\r\n        }\r\n    }, [inputName, useActivity])\r\n\r\n    return (\r\n        <Modal open={useActivity}\r\n               className={styles.modal}\r\n               onBackdropClick={handleClose}\r\n        >\r\n            <>\r\n                <Paper className={styles.cancelContainer}>\r\n                    <IconButton onClick={handleClose}\r\n                                className={styles.cancelButton}\r\n                    >\r\n                        <CancelOutlinedIcon />\r\n                    </IconButton>\r\n                </Paper>\r\n                <Box className={styles.searchContainer}>\r\n                    {\r\n                        isLoading &&\r\n                        <CircularProgress size={100} thickness={4} className={styles.loadingContainer}/>\r\n                    }\r\n                    {\r\n                        !isLoading && results.length === 0 &&\r\n                        <Typography>\r\n                            NO RESULTS\r\n                        </Typography>\r\n                    }\r\n                    {\r\n                        !isLoading && results && results.map((result, index) => (\r\n                            <Button variant=\"contained\"\r\n                                    onClick={handleResultClick(result.strTeam, result.strTeamBadge)}\r\n                                    key={index}\r\n                                    className={styles.resultButton}\r\n                            >\r\n                                <Avatar alt=\"Team badge\"\r\n                                        src={result.strTeamBadge}\r\n                                        className={styles.teamBadge}\r\n                                />\r\n                                {result.strTeam}\r\n                            </Button>\r\n                        ))\r\n                    }\r\n                </Box>\r\n            </>\r\n        </Modal>\r\n    )\r\n}","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport React, {useState} from \"react\";\r\nimport {basicFetch} from \"../../helpers/common\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport WaitForServer from \"../loading\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TeamSearch from \"./team-search\";\r\n\r\nconst useUpdateStyles = makeStyles(() => ({\r\n    container: {\r\n        padding: 20,\r\n        justifyContent: \"center\",\r\n    },\r\n    teamSetContainer: {\r\n        padding: 10,\r\n        margin: 10,\r\n        backgroundColor: 'floralwhite',\r\n        width: \"45%\",\r\n        minWidth: 300\r\n    },\r\n    root: {\r\n        width: 250,\r\n    },\r\n    input: {\r\n        width: 42,\r\n    },\r\n    allInput: {\r\n        fontSize: 18\r\n    },\r\n    error: {\r\n        color: 'red',\r\n        fontSize: '1.2em',\r\n        margin: \"auto\",\r\n        textAlign: \"center\"\r\n    },\r\n    submit: {\r\n        // marginLeft: 100,\r\n        marginTop: 10,\r\n        // marginRight: 100,\r\n        height: 60,\r\n        // width: 500,\r\n        fontSize: 19\r\n    },\r\n    nameFieldsContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\"\r\n    },\r\n    teamNameForm: {\r\n        width: \"100%\",\r\n        margin: 0,\r\n        padding: 0,\r\n        border: \"none\"\r\n    }\r\n}));\r\n\r\nexport default function UpdateTeams (props) {\r\n    const {tournament, tournamentId} = props;\r\n    const styles = useUpdateStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const tournamentTeams = tournament.teams.length;\r\n    const [numberOfTeams, setNumberOfTeams] = useState(tournamentTeams || 4);\r\n    const [disableNumberChange, setDisableChange] = useState(tournament.teams.length !== 0);\r\n    const fixturesGenerated = tournament.hasLeagueFixturesGenerated || !!tournament.currentRound;\r\n    let defaultValues = {}\r\n    tournament.teams.forEach((team, index) => {\r\n        defaultValues[`teamName${index}`] = team.teamName;\r\n        defaultValues[`teamLogo${index}`] = team.teamLogo;\r\n        defaultValues[`playerName${index}`] = team.playerName;\r\n    });\r\n    const [values, setValues] = useState(defaultValues);\r\n\r\n    const handleValueChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setValues(prevState => ({...prevState, [name]: value}));\r\n    }\r\n\r\n    const handleSliderChange = (event, newValue) => {\r\n        setNumberOfTeams(newValue);\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        setNumberOfTeams(event.target.value === '' ? '' : Number(event.target.value));\r\n    };\r\n    const handleApplyAndEnableButton = () => {\r\n        setDisableChange(prevState => {\r\n            if (prevState) {\r\n                if (!window.confirm(\r\n                    'Changing this will clear unsaved values. ' +\r\n                    'Do you want to continue?')) {\r\n                    return prevState\r\n                }\r\n            } else return !prevState;\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let teamNames = [];\r\n        let teamLogos = [];\r\n        let playerNames = [];\r\n        for (let i=0; i<numberOfTeams; i++) {\r\n            teamNames.push(values[`teamName${i}`]);\r\n            teamLogos.push(values[`teamLogo${i}`]);\r\n            playerNames.push(values[`playerName${i}`]);\r\n        }\r\n        const teamDetails = {teamNames, teamLogos, playerNames};\r\n        basicFetch(`tournament/${tournamentId}/teams`, 'post', teamDetails, setLoading, true, true);\r\n    }\r\n    const handleBlur = () => {\r\n        if (numberOfTeams < 4) {\r\n            setNumberOfTeams(4);\r\n        } else if (numberOfTeams > 30) {\r\n            setNumberOfTeams(30);\r\n        }\r\n    };\r\n    return (\r\n        <Grid container spacing={2} className={styles.container}>\r\n            <WaitForServer wait={loading} />\r\n            <Grid item xs={3}>\r\n                <Typography>Number of Teams</Typography>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n                <Input\r\n                    className={styles.input}\r\n                    value={numberOfTeams}\r\n                    margin=\"dense\"\r\n                    onChange={handleInputChange}\r\n                    onBlur={handleBlur}\r\n                    inputProps={{\r\n                        step: 1,\r\n                        min: 4,\r\n                        max: 30,\r\n                        type: 'number',\r\n                        'aria-labelledby': 'input-slider',\r\n                        className: styles.allInput,\r\n                        disabled: disableNumberChange\r\n                    }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Slider\r\n                    value={typeof numberOfTeams === 'number' ? numberOfTeams : 0}\r\n                    min={4}\r\n                    max={30}\r\n                    onChange={handleSliderChange}\r\n                    aria-labelledby=\"input-slider\"\r\n                    disabled={disableNumberChange}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <Button color=\"primary\"\r\n                        variant=\"outlined\"\r\n                        onClick={handleApplyAndEnableButton}\r\n                        disabled={fixturesGenerated}\r\n                >\r\n                    {disableNumberChange ? \"Enable Sliders\" : \"Apply\"}\r\n                </Button>\r\n            </Grid>\r\n            <Grid item className={styles.error}>\r\n                {\r\n                    fixturesGenerated &&\r\n                    <Typography>\r\n                        You can only change the player names as this tournament is already in progress.\r\n                        <br />\r\n                        <br />\r\n                        In order to update the team names, reset the tournament's fixtures.\r\n                    </Typography>\r\n                }\r\n            </Grid>\r\n            <div className={styles.nameFieldsContainer}>\r\n                {\r\n                    !!disableNumberChange &&\r\n                    new Array(numberOfTeams).fill(null).map((team, index) => (\r\n                        <TeamPlayerName\r\n                            key={index}\r\n                            index={index}\r\n                            values={values}\r\n                            onChange={handleValueChange}\r\n                            disabled={!disableNumberChange}\r\n                            disableTeamNames={fixturesGenerated}\r\n                            useRealTeams={tournament.useRealTeams}\r\n                        />\r\n                    ))\r\n                }\r\n                {\r\n                    !!disableNumberChange &&\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={styles.submit}\r\n                        onClick={handleSubmit}\r\n                        fullWidth={true}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                }\r\n            </div>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nfunction TeamPlayerName (props) {\r\n    const styles = useUpdateStyles();\r\n    const {index, disabled, disableTeamNames, values, onChange, useRealTeams} = props;\r\n    const teamNameInput = `teamName${index}`;\r\n    const teamLogoInput = `teamLogo${index}`;\r\n    const playerNameInput = `playerName${index}`;\r\n\r\n    const [isSearching, setSearching] = useState(false);\r\n\r\n    const handleOpenSearch = (e) => {\r\n        if (e) e.preventDefault();\r\n        if (!useRealTeams) return\r\n        setSearching(true);\r\n    }\r\n    const handleCloseSearch = () => {\r\n        setSearching(false);\r\n    }\r\n    const handleSelectedTeam = (inputName, logoInputName, teamName, teamLogo) => {\r\n        const teamNameEvent = {\r\n            target: {\r\n                name: inputName,\r\n                value: teamName\r\n            }\r\n        };\r\n        const teamLogoEvent = {\r\n            target: {\r\n                name: logoInputName,\r\n                value: teamLogo\r\n            }\r\n        }\r\n        onChange(teamNameEvent);\r\n        if (teamLogo) {\r\n            onChange(teamLogoEvent);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Paper className={styles.teamSetContainer}>\r\n            <TeamSearch useActivity={isSearching}\r\n                        handleClose={handleCloseSearch}\r\n                        inputName={teamNameInput}\r\n                        logoInputName={teamLogoInput}\r\n                        handleSelectedTeam={handleSelectedTeam}\r\n            />\r\n            {index+1}\r\n            <Grid container spacing={2} >\r\n                <Grid item xs={12} sm={6}>\r\n                    <form onSubmit={handleOpenSearch}\r\n                          className={styles.teamNameForm}\r\n                    >\r\n                        <TextField\r\n                            autoComplete=\"team name\"\r\n                            name={teamNameInput}\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id={teamNameInput}\r\n                            label=\"Team Name\"\r\n                            onSubmit={handleOpenSearch}\r\n                            inputProps={{\r\n                                className: styles.allInput,\r\n                            }}\r\n                            InputProps={{\r\n                                endAdornment: useRealTeams? (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton onClick={handleOpenSearch}\r\n                                                    disabled={disabled || disableTeamNames}\r\n                                        >\r\n                                            <SearchOutlinedIcon />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ) : undefined\r\n                            }}\r\n                            disabled={disabled || disableTeamNames}\r\n                            value={values[teamNameInput] || \"\"}\r\n                            onChange={onChange}\r\n                        />\r\n                    </form>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id={playerNameInput}\r\n                        label=\"Player Name\"\r\n                        name={playerNameInput}\r\n                        autoComplete=\"player name\"\r\n                        inputProps={{className: styles.allInput, disabled: disabled}}\r\n                        value={values[playerNameInput] || \"\"}\r\n                        onChange={onChange}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n\r\n    )\r\n}","import {KnockoutFixtures, LeagueFixtures} from '../fixtures';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    noFixtures: {\r\n        padding: 20,\r\n        textAlign: \"center\"\r\n    }\r\n}));\r\nexport default function UpdateResults (props) {\r\n    const {tournament, fixtures} = props;\r\n    const {leagueFixtures} = fixtures;\r\n    const {useTwoLegs, useOneFinal, teams, _id: tournamentId} = tournament;\r\n    const styles = useStyles();\r\n    if (!tournament.hasLeagueFixturesGenerated && !tournament.currentRound) return (\r\n        <Paper className={styles.noFixtures}>\r\n            Fixtures have not been generated yet.\r\n        </Paper>\r\n    )\r\n    return (\r\n        <>\r\n            {\r\n                tournament.hasLeagueFixturesGenerated &&\r\n                <LeagueFixtures fixtures={leagueFixtures}\r\n                                teams={teams}\r\n                                useTwoLegs={useTwoLegs}\r\n                                isUpdatingResults={true}\r\n                                tournamentId={tournamentId}\r\n                />\r\n            }\r\n            {\r\n                tournament.currentRound &&\r\n                <KnockoutFixtures fixtures={fixtures}\r\n                                  teams={teams}\r\n                                  useTwoLegs={useTwoLegs}\r\n                                  useOneFinal={useOneFinal}\r\n                                  isUpdatingResults={true}\r\n                                  tournamentId={tournamentId}\r\n                />\r\n            }\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n","import {useState} from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {TournamentForm} from \"./pages/create-new\";\r\nimport AdminActions from \"./admin-dir/admin-actions\";\r\nimport UpdateTeams from \"./admin-dir/update-teams\";\r\nimport UpdateResults from \"./admin-dir/update-results\";\r\nimport TabPanel from \"./tab-panel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n    },\r\n    tabPanelContainer: {\r\n        marginTop: 10\r\n    },\r\n    appBarContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n    }\r\n}));\r\n\r\nexport default function Admin (props) {\r\n    const {tournament, tournamentId, fixtures} = props;\r\n    const styles = useStyles();\r\n    const [value, setValue] = useState(\"actions\");\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Paper className={styles.root}>\r\n            <AppBar position=\"sticky\" color=\"default\" className={styles.appBarContainer}>\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"on\"\r\n                >\r\n                    <Tab label=\"actions\" value=\"actions\" />\r\n                    <Tab label=\"Settings\" value=\"settings\"/>\r\n                    <Tab label=\"Teams\" value=\"teams\"/>\r\n                    <Tab label=\"Fixtures\" value=\"fixtures\"/>\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel index=\"actions\"\r\n                      value={value}\r\n            >\r\n                <AdminActions tournament={tournament}\r\n                              tournamentId={tournamentId}\r\n                              setAdminPage={setValue}\r\n\r\n                />\r\n            </TabPanel>\r\n            <TabPanel value={value}\r\n                      index=\"settings\"\r\n                      >\r\n                {\r\n                    tournament.name &&\r\n                    <TournamentForm isCreating={false}\r\n                                    tournament={tournament}\r\n                    />\r\n                }\r\n            </TabPanel>\r\n            <TabPanel value={value}\r\n                      index=\"teams\"\r\n            >\r\n                <UpdateTeams tournament={tournament}\r\n                             tournamentId={tournamentId}\r\n                />\r\n            </TabPanel>\r\n            <TabPanel value={value}\r\n                      index=\"fixtures\"\r\n            >\r\n                <UpdateResults fixtures={fixtures}\r\n                               tournament={tournament}\r\n                               tournamentId={tournamentId}\r\n                />\r\n            </TabPanel>\r\n        </Paper>\r\n    );\r\n}\r\n\r\n","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport WaitForServer from \"../loading\";\r\nimport {basicFetch, fetchApi} from \"../../helpers/common\";\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {AppBar} from \"@material-ui/core\";\r\nimport {Switch, Route, useHistory, useLocation, Link} from 'react-router-dom';\r\nimport SportsSoccerOutlinedIcon from '@material-ui/icons/SportsSoccerOutlined';\r\n\r\nimport {KnockoutFixtures, LeagueFixtures} from \"../fixtures\";\r\nimport LeagueTable from \"../league-table\";\r\nimport Admin from \"../admin\";\r\nimport TabPanel from \"../tab-panel\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n    },\r\n    pageHeader: {\r\n        color: \"darkslategray\",\r\n        wordBreak: 'break-all',\r\n        marginBottom: 10,\r\n        padding: 10,\r\n        fontWeight: \"bold\"\r\n    },\r\n    indicator: {\r\n        background: \"firebrick\",\r\n    },\r\n    appBarContainer: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n    },\r\n    tabItem: {\r\n        '&:selected': {\r\n            fontWeight: \"bold\"\r\n        }\r\n    },\r\n    tabPanelContainer: {\r\n        marginTop: 10\r\n    },\r\n    teamContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        padding: 0,\r\n        justifyContent: \"center\"\r\n    },\r\n    noFixtures: {\r\n        padding: 20,\r\n        textAlign: \"center\"\r\n    },\r\n    favoriteText: {\r\n        margin: \"20px auto\",\r\n        width: \"fit-content\"\r\n    }\r\n}));\r\n\r\nexport default function Tournament (props) {\r\n    const {tournamentId, user} = props;\r\n    const styles = useStyles();\r\n    const [loading, setLoadingStatus] = useState(false);\r\n    const [tournament, setTournament] = useState({notSet: true});\r\n    const [isTournamentAFavorite, setFavorite] = useState(false);\r\n    const [isLeague, setLeague] = useState(false);\r\n    const [teams, setTeams] = useState([]);\r\n    const [fixturesDocument, setFixturesDoc] = useState({notSet: true});\r\n    const [tableData, setTableData] = useState([]);\r\n    const location = useLocation();\r\n    const path = location.pathname.split('/');\r\n    const page = path[path.length -1];\r\n    const startingPage =\r\n        ['table', 'admin', 'teams'].includes(page) ? page : 'fixtures';\r\n    const [currentPage, setCurrentPage] = React.useState(startingPage);\r\n    const history = useHistory();\r\n    const handleChange = (event, newValue) => {\r\n        setCurrentPage(newValue);\r\n        const baseUrl = `/tournament/${tournamentId}`;\r\n        if (newValue === \"fixtures\" || newValue === \"favorites\") {\r\n            history.push(`${baseUrl}`)\r\n        } else {\r\n            history.push(`${baseUrl}/${newValue}`);\r\n        }\r\n    };\r\n    // get fixtures on mount\r\n    const getTournamentAndFixtures = useCallback(async () => {\r\n        setLoadingStatus(true);\r\n        let tournament = {};\r\n        try {\r\n            tournament = await fetchApi(`tournament/${tournamentId}`, 'get');\r\n            if (tournament === null) return setTournament({notFound: true});\r\n            setTournament(tournament);\r\n            setTeams(tournament.teams);\r\n            setLeague(!tournament.isKnockout);\r\n            const fixtures = await fetchApi(`tournament/${tournamentId}/fixtures`, 'get');\r\n            setFixturesDoc(fixtures);\r\n            if (!tournament.isKnockout) {\r\n                const tableData = await fetchApi(`tournament/${tournamentId}/leagueTable`, 'get');\r\n                setTableData(tableData);\r\n            }\r\n        } catch (e) {\r\n            if (!tournament.name) setTournament({notFound: true});\r\n            console.log(e);\r\n        } finally {\r\n            setTimeout(()=>setLoadingStatus(false), 100);\r\n        }\r\n    }, [tournamentId])\r\n    // get tournament and fixtures on mount\r\n    useEffect(() => {\r\n        getTournamentAndFixtures()\r\n            .catch(undefined);\r\n    }, [getTournamentAndFixtures]);\r\n    // find if tournament is a favorite\r\n    useEffect(() => {\r\n        if (!user) return\r\n        fetchApi(`tournament/${tournamentId}/isFavorite`, 'get')\r\n            .then(result => setFavorite(result))\r\n            .catch(e => console.log(e));\r\n    }, [tournamentId, user]);\r\n    const handleAddToFav = () => {\r\n        basicFetch(`tournament/${tournamentId}/favorites`,'post',{},setLoadingStatus);\r\n        setFavorite(true);\r\n    }\r\n    const handleRemoveFromFav =() => {\r\n        basicFetch(`tournament/${tournamentId}/favorites`, 'delete',{},setLoadingStatus);\r\n        setFavorite(false);\r\n    }\r\n    // add to recent list using local storage\r\n    useEffect(() => {\r\n        if (tournament && !tournament.notSet && !tournament.notFound) {\r\n            const tournamentObj = {\r\n                name: tournament.name,\r\n                createdBy: tournament.admin.username,\r\n                isKnockout: tournament.isKnockout,\r\n                tournamentId: tournament._id\r\n            }\r\n            let recentTournaments = localStorage.getItem('recentTournaments');\r\n            if (recentTournaments) recentTournaments = JSON.parse(recentTournaments);\r\n            else recentTournaments = [];\r\n            // remove current tournament from list if present - add to top as most recent\r\n            recentTournaments = recentTournaments.filter(item => {\r\n                return (item.tournamentId !== tournament._id)\r\n            });\r\n            if (recentTournaments.length > 4) recentTournaments.pop();\r\n            recentTournaments.unshift(tournamentObj);\r\n            localStorage.setItem('recentTournaments', JSON.stringify(recentTournaments));\r\n        }\r\n    }, [tournament])\r\n    if (tournament.notFound) return (\r\n        <Container maxWidth=\"lg\" className={styles.root}>\r\n            <Typography>TOURNAMENT NOT FOUND</Typography>\r\n        </Container>\r\n    )\r\n    if (tournament.notSet) return (\r\n        <Container maxWidth=\"lg\" className={styles.root}>\r\n            <Typography>LOADING</Typography>\r\n        </Container>\r\n    )\r\n    if (currentPage === \"admin\" && !tournament.notSet && !tournament.notFound &&\r\n        tournament.admin.username !== user) {\r\n        // setCurrentPage('fixtures');\r\n        window.location.href = `/tournament/${tournamentId}`;\r\n    }\r\n    return (\r\n        <Container maxWidth=\"lg\" className={styles.root}>\r\n            <WaitForServer wait={loading}/>\r\n            <Paper elevation={2}>\r\n                <Typography variant=\"h6\" align=\"center\" className={styles.pageHeader}>\r\n                    {tournament.name}\r\n                </Typography>\r\n            </Paper>\r\n            <AppBar position=\"sticky\" color=\"default\" className={styles.appBarContainer}>\r\n                <Tabs\r\n                    value={currentPage}\r\n                    onChange={handleChange}\r\n                    classes={{indicator: styles.indicator}}\r\n                    textColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"on\"\r\n                >\r\n                    <Tab icon={<FavoriteIcon color={currentPage===\"favorites\"?\"secondary\":\"disabled\"}/>}\r\n                         aria-label=\"favorites\"\r\n                         value=\"favorites\"/>\r\n                    <Tab label=\"Fixtures\"\r\n                         className={styles.tabItem}\r\n                         value=\"fixtures\"\r\n                    />\r\n                    {\r\n                        tournament && !tournament.isKnockout &&\r\n                        <Tab label=\"Table\"\r\n                             className={styles.tabItem}\r\n                             value=\"table\"\r\n                        />\r\n                    }\r\n\r\n                    <Tab label=\"Teams\"\r\n                         className={styles.tabItem}\r\n                         value=\"teams\"\r\n                    />\r\n                    {\r\n                        !tournament.notSet && tournament.admin.username === user &&\r\n                        <Tab label=\"ADMIN\"\r\n                             className={styles.tabItem}\r\n                             value=\"admin\"\r\n                        />\r\n                    }\r\n                </Tabs>\r\n            </AppBar>\r\n            <Box className={styles.tabPanelContainer}>\r\n                <Switch>\r\n                    {/*LEAGUE TABLE*/}\r\n                    <Route path=\"/tournament/:id/table\">\r\n                        {\r\n                            isLeague &&\r\n                            <TabPanel value={currentPage} index=\"table\">\r\n                                {\r\n                                    !tournament.hasLeagueFixturesGenerated &&\r\n                                    <Paper className={styles.noFixtures}>\r\n                                        Fixtures have not been generated yet.\r\n                                    </Paper>\r\n                                }\r\n                                {\r\n                                    tableData.length !== 0 &&\r\n                                    <LeagueTable tableData={tableData}/>\r\n                                }\r\n                            </TabPanel>\r\n                        }\r\n                    </Route>\r\n                    {/*TOURNAMENT TEAMS*/}\r\n                    <Route path=\"/tournament/:id/teams\">\r\n                        <TabPanel value={currentPage}\r\n                                  index=\"teams\"\r\n                                  className={styles.teamContainer}>\r\n                            {\r\n                                teams.map((team, index) => (\r\n                                    <Team key={index}\r\n                                          team={team}\r\n                                          index={index}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </TabPanel>\r\n                    </Route>\r\n                    {/*ADMIN PAGE*/}\r\n                    <Route path=\"/tournament/:id/admin\">\r\n                        {\r\n                            tournament.admin.username === user &&\r\n                            <TabPanel value={currentPage}\r\n                                      index=\"admin\"\r\n                            >\r\n                                <Admin tournament={tournament}\r\n                                       tournamentId={tournamentId}\r\n                                       fixtures={fixturesDocument}\r\n                                />\r\n                            </TabPanel>\r\n                        }\r\n                    </Route>\r\n                    {/*FIXTURES & RESULTS (DEFAULT) TAB AND FAVORITES TAB*/}\r\n                    <Route path=\"/tournament/:id\">\r\n                        {/*FAVORITES*/}\r\n                        <TabPanel value={currentPage} index=\"favorites\">\r\n                            {\r\n                                !user &&\r\n                                <Typography className={styles.favoriteText}>\r\n                                    <Link to={{pathname: \"/login\", state: {prevPage: window.location.href}}}>\r\n                                        Sign in to add to your favorites\r\n                                    </Link>\r\n                                </Typography>\r\n                            }\r\n                            {\r\n                                user &&\r\n                                <Button type=\"button\"\r\n                                        variant=\"contained\"\r\n                                        color={isTournamentAFavorite?\"primary\":\"secondary\"}\r\n                                        className={styles.submit}\r\n                                        onClick={isTournamentAFavorite?handleRemoveFromFav:handleAddToFav}\r\n                                        fullWidth={true}\r\n                                >\r\n                                    {isTournamentAFavorite ? \"Remove from favorites\":\"Add to Favorites\"}\r\n                                </Button>\r\n                            }\r\n                        </TabPanel>\r\n                        {/*FIXTURES*/}\r\n                        <TabPanel value={currentPage}\r\n                                  index=\"fixtures\">\r\n                            {\r\n                                !tournament.hasLeagueFixturesGenerated && !tournament.currentRound &&\r\n                                <Paper className={styles.noFixtures}>\r\n                                    Fixtures have not been generated yet.\r\n                                </Paper>\r\n                            }\r\n                            {\r\n                                tournament.hasLeagueFixturesGenerated &&\r\n                                !fixturesDocument.notSet &&\r\n                                <LeagueFixtures\r\n                                    teams={teams}\r\n                                    fixtures={fixturesDocument.leagueFixtures}\r\n                                    useTwoLegs={tournament.useTwoLegs}\r\n                                    tournamentId={tournamentId}\r\n                                />\r\n                            }\r\n                            {\r\n                                tournament.currentRound && !fixturesDocument.notSet &&\r\n                                <KnockoutFixtures\r\n                                    teams={teams}\r\n                                    fixtures={fixturesDocument}\r\n                                    useTwoLegs={tournament.useTwoLegs}\r\n                                    useOneFinal={tournament.useOneFinal}\r\n                                />\r\n                            }\r\n                        </TabPanel>\r\n                    </Route>\r\n                </Switch>\r\n            </Box>\r\n        </Container>\r\n        )\r\n}\r\n\r\n\r\nconst useTeamsStyle = makeStyles((theme) => ({\r\n    teamBox: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        padding: 5,\r\n        margin: 5,\r\n        borderRadius: 5,\r\n        width: \"fit-content\"\r\n    },\r\n    teamButton: {\r\n        display: \"flex\",\r\n        boxSizing: \"border-box\",\r\n        justifyContent: \"space-between\",\r\n        textAlign: \"left\",\r\n        backgroundColor: \"#f5e1e1\",\r\n        '&:hover': {\r\n            backgroundColor: \"#f5e1e1\",\r\n        },\r\n        width: 300,\r\n        margin: \"0 auto\"\r\n        // alignSelf: \"center\"\r\n    },\r\n    teamIndex: {\r\n        fontSize: 24,\r\n        color: \"brown\",\r\n        fontFamily: \"'Rubik Mono One', sans-serif !important\"\r\n    },\r\n    name: {\r\n        padding: 10,\r\n        margin: \"0 5px\",\r\n        flex: 1,\r\n        fontWeight: theme.typography.fontWeightBold,\r\n    },\r\n    owner: {\r\n        boxSizing: \"border-box\",\r\n        margin: \"0 auto\",\r\n        padding: 5,\r\n        paddingLeft: 10,\r\n        textAlign: \"left\",\r\n        fontStyle: \"italic\",\r\n        width: 300,\r\n        backgroundColor: \"whitesmoke\"\r\n    },\r\n    teamBadge: {\r\n        width: 60,\r\n        height: 60,\r\n        margin: \"0 5px\",\r\n        '& svg, & path': {\r\n            width: 50,\r\n            height: 50\r\n        }\r\n    }\r\n}));\r\nfunction Team (props) {\r\n    const {team, index} = props;\r\n    const styles = useTeamsStyle();\r\n    return (\r\n        <Box className={`${styles.teamBox}`}\r\n             size=\"large\"\r\n        >\r\n            <Button\r\n                className={styles.teamButton}\r\n                variant=\"contained\"\r\n                // onClick={navigateToTournament}\r\n            >\r\n                <Typography className={styles.teamIndex}>{index+1}</Typography>\r\n                <Typography className={styles.name}>\r\n                    {team.teamName || \"( empty )\"}\r\n                </Typography>\r\n                <Avatar alt=\"Team badge\"\r\n                        src={team.teamLogo}\r\n                        className={styles.teamBadge}\r\n                >\r\n                    {!team.teamLogo && <SportsSoccerOutlinedIcon />}\r\n                </Avatar>\r\n            </Button>\r\n            <Typography\r\n                paragraph={true}\r\n                className={styles.owner}\r\n            >\r\n                Owner: {team.playerName || \"(empty)\"}\r\n            </Typography>\r\n        </Box>\r\n    )\r\n}","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport {fetchApi} from \"../../helpers/common\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport WaitForServer from \"../loading\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {SearchSchema} from \"../../helpers/validation\";\r\nimport {TournamentItem} from \"./my-tournaments\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport TabPanel from \"../tab-panel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: \"10px auto\"\r\n    },\r\n    error: {\r\n        width: \"100%\",\r\n        padding: 0,\r\n        color: 'red',\r\n        fontSize: '1.2em',\r\n        margin: \"5px auto\",\r\n        textAlign: \"center\",\r\n        '&:empty': {\r\n            margin: 0\r\n        }\r\n    },\r\n    resultsContainer: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"space-evenly\",\r\n        padding: 10,\r\n        width: \"100%\"\r\n    },\r\n    panelContainer: {\r\n        width: \"100%\",\r\n        padding: \"10px 0\"\r\n    }\r\n}));\r\n\r\nexport default function Search () {\r\n    const styles = useStyles();\r\n    const [wait, setWaitForServer] = useState(false);\r\n    const [serverError, setServerError] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [explore, setExploreTournaments] = useState([]);\r\n    const [value, setValue] = useState(\"search\");\r\n\r\n    // get public recently created tournaments\r\n    useEffect(() => {\r\n        fetchApi(`tournament/explore`, 'get')\r\n            .then(result => setExploreTournaments(result))\r\n            .catch(e => console.log(e));\r\n    }, []);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: {searchString: \"\"},\r\n        validationSchema: SearchSchema,\r\n        onSubmit: values => {\r\n            setWaitForServer(true);\r\n            setServerError(\"\");\r\n            setTimeout(async () => {\r\n                try {\r\n                    const results = await fetchApi(`tournament/search?searchString=${values.searchString}`, 'get');\r\n                    setSearchResults(results);\r\n                } catch (err) {\r\n                    setServerError(err);\r\n                } finally {\r\n                    setWaitForServer(false);\r\n                }\r\n            }, 300);\r\n        }\r\n    });\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"md\">\r\n            <WaitForServer wait={wait}/>\r\n            <CssBaseline/>\r\n            <div className={styles.paper}>\r\n                <Avatar className={styles.avatar}>\r\n                    <SearchOutlinedIcon/>\r\n                </Avatar>\r\n                <AppBar position=\"sticky\" color=\"default\" className={styles.appBarContainer}>\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        variant=\"standard\"\r\n                        centered={true}\r\n                    >\r\n                        <Tab label=\"Search\" value=\"search\" />\r\n                        <Tab label=\"Explore\" value=\"explore\"/>\r\n                    </Tabs>\r\n                </AppBar>\r\n                <TabPanel index=\"search\"\r\n                          value={value}\r\n                          className={styles.panelContainer}\r\n                >\r\n                    <>\r\n                        <form className={styles.form} onSubmit={formik.handleSubmit}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"searchString\"\r\n                                label=\"Search\"\r\n                                name=\"searchString\"\r\n                                autoComplete=\"search\"\r\n                                onChange={formik.handleChange}\r\n                                onBlur={formik.handleBlur}\r\n                                value={formik.values.searchString}\r\n                            />\r\n                            <Typography className={styles.error}>\r\n                                {formik.touched.searchString && formik.errors.searchString}\r\n                            </Typography>\r\n                            <Typography className={styles.error}>\r\n                                {serverError}\r\n                            </Typography>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={styles.submit}\r\n                            >\r\n                                Search\r\n                            </Button>\r\n                        </form>\r\n                        <Paper className={styles.resultsContainer}>\r\n                            {\r\n                                searchResults.map(tournament => (\r\n                                    <TournamentItem key={tournament._id}\r\n                                                    name={tournament.name}\r\n                                                    isKnockout={tournament.isKnockout}\r\n                                                    createdBy={tournament.admin.username}\r\n                                                    tournamentId={tournament._id}\r\n                                    />\r\n                                ))\r\n                            }\r\n                            {\r\n                                searchResults.length === 0 &&\r\n                                <Typography className={styles.noResults}>\r\n                                    No Results\r\n                                </Typography>\r\n                            }\r\n                        </Paper>\r\n                    </>\r\n                </TabPanel>\r\n                <TabPanel value={value}\r\n                          index=\"explore\"\r\n                          className={styles.panelContainer}\r\n                >\r\n                    <Paper className={styles.resultsContainer}>\r\n                        {\r\n                            explore.map(tournament => (\r\n                                <TournamentItem key={tournament._id}\r\n                                                name={tournament.name}\r\n                                                isKnockout={tournament.isKnockout}\r\n                                                createdBy={tournament.admin.username}\r\n                                                tournamentId={tournament._id}\r\n                                />\r\n                            ))\r\n                        }\r\n                        {\r\n                            explore.length === 0 &&\r\n                            <Typography className={styles.noResults}>\r\n                                Nothing to explore at the moment\r\n                            </Typography>\r\n                        }\r\n                    </Paper>\r\n                </TabPanel>\r\n            </div>\r\n        </Container>\r\n    )\r\n}","import {useState, useEffect} from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    // Link,\r\n    Redirect,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport NavBar from \"./components/navbar\";\r\nimport SignUp from \"./components/pages/sign-up\";\r\nimport Login from \"./components/pages/login\";\r\nimport {fetchApi} from \"./helpers/common\";\r\n\r\nimport appStyle from './stylesheets/app.module.scss';\r\nimport './stylesheets/reset.css';\r\nimport WaitForServer from \"./components/loading\";\r\nimport MyTournaments from \"./components/pages/my-tournaments\";\r\nimport Tournament from \"./components/pages/tournament\";\r\nimport CreateNew from \"./components/pages/create-new\";\r\nimport Search from \"./components/pages/search\";\r\n\r\nfunction App() {\r\n    const [user, setUser] = useState('');\r\n    const [isUserCheckDone, setUserCheckDone] = useState(false);\r\n    const [waiting, setWaitForServer] = useState(false);\r\n    // Get user details\r\n    const getUserDetails = async () => {\r\n        try {\r\n            setWaitForServer(true);\r\n            const user = await fetchApi('users/currentUser', 'get');\r\n            setUser(user.username);\r\n        } catch (e) {\r\n            if (e === 'no-user') setUser(\"\");\r\n        } finally {\r\n            setTimeout(()=>{\r\n                setWaitForServer(false)\r\n                setUserCheckDone(true);\r\n            },200);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getUserDetails()\r\n            .catch(e => console.log(e))\r\n    }, []);\r\n    return (\r\n        <div className={`App app ${appStyle.app}`} id=\"app\">\r\n            <WaitForServer wait={waiting} />\r\n            <Router>\r\n              <NavBar user={user}/>\r\n              <div className={appStyle.belowNavBarContainer} id=\"mainContent\">\r\n                  {\r\n                      isUserCheckDone &&\r\n                      <Switch>\r\n                          <Route path=\"/signup\">\r\n                              {user && <Redirect to=\"/\" />}\r\n                              <SignUp />\r\n                          </Route>\r\n                          <Route path=\"/login\">\r\n                              {user && <Redirect to=\"/\" />}\r\n                              <Login />\r\n                          </Route>\r\n                          <Route path=\"/search\">\r\n                                <Search />\r\n                          </Route>\r\n                          <Route path=\"/new\">\r\n                              <CreateNew user={user} />\r\n                          </Route>\r\n                          <Route path=\"/tournament/:id\">\r\n                              <TournamentIdHandler user={user}/>\r\n                          </Route>\r\n                          <Route path=\"/\">\r\n                              <MyTournaments user={user} />\r\n                          </Route>\r\n                      </Switch>\r\n                  }\r\n              </div>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TournamentIdHandler (props) {\r\n    const {id} = useParams();\r\n    return <Tournament tournamentId={id} user={props.user}/>\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\nimport reportWebVitals from './other/reportWebVitals';\r\n\r\nReactDOM.render(\r\n    // change back to <>React.StrictMode\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}